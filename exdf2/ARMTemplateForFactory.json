{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "exdf2"
		},
		"EXAI_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'EXAI_LS'"
		},
		"EXSQL_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'EXSQL_LS'"
		},
		"DailyBackup_TRIGGER_properties_UsageAnalyticsIngest_parameters_TelemetryDateFolder": {
			"type": "string",
			"defaultValue": "PreviousDate"
		},
		"DailyBackup_TRIGGER_properties_UsageAnalyticsIngest_parameters_RunBy": {
			"type": "string",
			"defaultValue": "System"
		},
		"DailyBackup_TRIGGER_properties_InsightsLogs_AuditLogs_parameters_DateToLoad": {
			"type": "string",
			"defaultValue": "PreviousDate"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/InsightsLogs_AuditLogs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Audit Logs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Default Value If DateToLoad is Empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "insights-logs-auditlogs/tenantId=42032c36-c513-4d46-bec4-303b1d4e6c42"
							},
							{
								"name": "Destination",
								"value": "InsightsLogs.AuditLogs"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "PipelineRunId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@variables('DateToLoad')",
										"type": "Expression"
									},
									"wildcardFolderPath": "tenantId=42032c36-c513-4d46-bec4-303b1d4e6c42",
									"wildcardFileName": {
										"value": "*.json",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['time']"
										},
										"sink": {
											"name": "time",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['resourceId']"
										},
										"sink": {
											"name": "resourceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['operationName']"
										},
										"sink": {
											"name": "operationName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['operationVersion']"
										},
										"sink": {
											"name": "operationVersion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['category']"
										},
										"sink": {
											"name": "category",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tenantId']"
										},
										"sink": {
											"name": "tenantId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['resultSignature']"
										},
										"sink": {
											"name": "resultSignature",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['resultDescription']"
										},
										"sink": {
											"name": "resultDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['durationMs']"
										},
										"sink": {
											"name": "durationMs",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['callerIpAddress']"
										},
										"sink": {
											"name": "callerIpAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['correlationId']"
										},
										"sink": {
											"name": "correlationId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['level']"
										},
										"sink": {
											"name": "level",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['id']"
										},
										"sink": {
											"name": "PropId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['category']"
										},
										"sink": {
											"name": "PropCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['correlationId']"
										},
										"sink": {
											"name": "PropCorrelationId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['result']"
										},
										"sink": {
											"name": "PropResult",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['resultReason']"
										},
										"sink": {
											"name": "PropResultReason",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['activityDisplayName']"
										},
										"sink": {
											"name": "PropActivityDisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['activityDateTime']"
										},
										"sink": {
											"name": "PropActivityDateTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['loggedByService']"
										},
										"sink": {
											"name": "PropLoggedByService",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['operationType']"
										},
										"sink": {
											"name": "PropOperationType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['initiatedBy']['user']['id']"
										},
										"sink": {
											"name": "PropInitiatedByUserId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['initiatedBy']['user']['displayName']"
										},
										"sink": {
											"name": "PropInitiatedByUserDisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['initiatedBy']['user']['userPrincipalName']"
										},
										"sink": {
											"name": "PropInitiatedByUserPrincipalName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['initiatedBy']['user']['ipAddress']"
										},
										"sink": {
											"name": "PropInitiatedByUserIpAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['initiatedBy']['app']['appId']"
										},
										"sink": {
											"name": "PropInitiatedByAppId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['initiatedBy']['app']['displayName']"
										},
										"sink": {
											"name": "PropInitiatedByAppDisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['initiatedBy']['app']['servicePrincipalId']"
										},
										"sink": {
											"name": "PropInitiatedByAppServicePrincipalId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['initiatedBy']['app']['servicePrincipalName']"
										},
										"sink": {
											"name": "PropInitiatedByAppServicePrincipalName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['targetResources'][0]['id']"
										},
										"sink": {
											"name": "PropInitiatedByTargetResourceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['targetResources'][0]['displayName']"
										},
										"sink": {
											"name": "PropInitiatedByTargetResourceDisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['targetResources'][0]['type']"
										},
										"sink": {
											"name": "PropInitiatedByTargetResourceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['identity']"
										},
										"sink": {
											"name": "Identity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['PipelineRunId']"
										},
										"sink": {
											"name": "PipelineRunId"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "InsightsLogsAuditLogsBlobJsonByDate_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "InsightsLogsAuditLogsTable_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Default Value If DateToLoad is Empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.DateToLoad),equals(pipeline().parameters.DateToLoad,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set DateToLoad to Parameter Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DateToLoad",
										"value": {
											"value": "@pipeline().parameters.DateToLoad",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set DateToLoad to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DateToLoad",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"DateToLoad": {
						"type": "string",
						"defaultValue": "PreviousDate"
					}
				},
				"variables": {
					"DateToLoad": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InsightsLogsAuditLogsBlobJsonByDate_DS')]",
				"[concat(variables('factoryId'), '/datasets/InsightsLogsAuditLogsTable_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InsightsLogs_SignInLogs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL SignIn Logs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Default Value If DateToLoad is Empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "insights-logs-signinlogs/tenantId=42032c36-c513-4d46-bec4-303b1d4e6c42/*.json"
							},
							{
								"name": "Destination",
								"value": "InsightsLogs.SignInLogs"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "PipelineRunId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@variables('DateToLoad')",
										"type": "Expression"
									},
									"wildcardFolderPath": "tenantId=42032c36-c513-4d46-bec4-303b1d4e6c42",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['time']"
										},
										"sink": {
											"name": "time",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['resourceId']"
										},
										"sink": {
											"name": "resourceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['operationName']"
										},
										"sink": {
											"name": "operationName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['operationVersion']"
										},
										"sink": {
											"name": "operationVersion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['category']"
										},
										"sink": {
											"name": "category",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tenantId']"
										},
										"sink": {
											"name": "tenantId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['resultType']"
										},
										"sink": {
											"name": "resultType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['resultSignature']"
										},
										"sink": {
											"name": "resultSignature",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['resultDescription']"
										},
										"sink": {
											"name": "resultDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['durationMs']"
										},
										"sink": {
											"name": "durationMs",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['callerIpAddress']"
										},
										"sink": {
											"name": "callerIpAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['correlationId']"
										},
										"sink": {
											"name": "correlationId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['identity']"
										},
										"sink": {
											"name": "identity"
										}
									},
									{
										"source": {
											"path": "$['Level']"
										},
										"sink": {
											"name": "Level",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['id']"
										},
										"sink": {
											"name": "PropId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['createdDateTime']"
										},
										"sink": {
											"name": "PropCreatedDateTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['userDisplayName']"
										},
										"sink": {
											"name": "PropUserDisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['userPrincipalName']"
										},
										"sink": {
											"name": "PropUserPrincipalName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['userId']"
										},
										"sink": {
											"name": "PropUserId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['appId']"
										},
										"sink": {
											"name": "PropAppId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['appDisplayName']"
										},
										"sink": {
											"name": "PropAppDisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['ipAddress']"
										},
										"sink": {
											"name": "PropIpAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['status']['errorCode']"
										},
										"sink": {
											"name": "PropStatusErrorCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['properties']['status']['failureReason']"
										},
										"sink": {
											"name": "PropStatusFailureReason",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['userAgent']"
										},
										"sink": {
											"name": "PropUserAgent",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['deviceDetail']['deviceId']"
										},
										"sink": {
											"name": "PropDeviceDetailId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['deviceDetail']['operatingSystem']"
										},
										"sink": {
											"name": "PropDeviceDetailOS",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['deviceDetail']['browser']"
										},
										"sink": {
											"name": "PropDeviceDetailBrowser",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['location']['city']"
										},
										"sink": {
											"name": "PropLocCity"
										}
									},
									{
										"source": {
											"path": "$['properties']['location']['state']"
										},
										"sink": {
											"name": "PropLocState"
										}
									},
									{
										"source": {
											"path": "$['properties']['location']['countryOrRegion']"
										},
										"sink": {
											"name": "PropLocCountryOrRegion"
										}
									},
									{
										"source": {
											"path": "$['properties']['mfaDetail']['authMethod']"
										},
										"sink": {
											"name": "PropMfaDetailAuthMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['conditionalAccessStatus']"
										},
										"sink": {
											"name": "PropConditionalAccessStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['originalRequestId']"
										},
										"sink": {
											"name": "PropOriginalRequestId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['isInteractive']"
										},
										"sink": {
											"name": "PropIsInteractive",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['properties']['tokenIssuerName']"
										},
										"sink": {
											"name": "PropTokenIssuerName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['tokenIssuerType']"
										},
										"sink": {
											"name": "PropTokenIssuerType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['processingTimeInMilliseconds']"
										},
										"sink": {
											"name": "PropProcessingTimeInMilliseconds",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['properties']['riskDetail']"
										},
										"sink": {
											"name": "PropRiskDetail",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['riskLevelAggregated']"
										},
										"sink": {
											"name": "PropRiskLevelAggregated",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['riskLevelDuringSignIn']"
										},
										"sink": {
											"name": "PropRiskLevelDuringSignIn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['riskState']"
										},
										"sink": {
											"name": "PropRiskState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['resourceDisplayName']"
										},
										"sink": {
											"name": "PropResourceDisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['authenticationRequirement']"
										},
										"sink": {
											"name": "PropAuthenticationRequirement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['servicePrincipalId']"
										},
										"sink": {
											"name": "PropServicePrincipalId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['properties']['accountType']"
										},
										"sink": {
											"name": "PropAccountType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['properties']['clientAppUsed']"
										},
										"sink": {
											"name": "PropClientAppUsed"
										}
									},
									{
										"source": {
											"path": "$['properties']['resourceId']"
										},
										"sink": {
											"name": "PropResourceId"
										}
									},
									{
										"source": {
											"path": "$['PipelineRunId']"
										},
										"sink": {
											"name": "PipelineRunId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['location']"
										},
										"sink": {
											"name": "PropLocation"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "InsightsLogsSignInLogsBlobJsonByDate_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "InsightsLogsSignInLogsTable_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Default Value If DateToLoad is Empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.DateToLoad),equals(pipeline().parameters.DateToLoad,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set DateToLoad to Parameter Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DateToLoad",
										"value": {
											"value": "@pipeline().parameters.DateToLoad",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set DateToLoad to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DateToLoad",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"DateToLoad": {
						"type": "string",
						"defaultValue": "PreviousDate"
					}
				},
				"variables": {
					"DateToLoad": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InsightsLogsSignInLogsBlobJsonByDate_DS')]",
				"[concat(variables('factoryId'), '/datasets/InsightsLogsSignInLogsTable_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsGetConfig_Event')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Staging Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StagingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.StagingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LandingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.LandingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Include Null Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IncludeNullEnvironment",
							"value": {
								"value": "@bool(activity('Get Configuration').output.firstRow.IncludeNullEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Default Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DefaultEnvironment",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.DefaultEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment1",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment2",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment3",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetConfiguration]",
								"storedProcedureParameters": {
									"ConfigurationGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.AppInsightsTopic",
											"type": "Expression"
										}
									},
									"ConfigurationKey": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "UsageAnalyticsIngestConfig_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set App Insights Directory",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AppInsightsDirectory",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.AppInsightsDirectory)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment4",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Ingest Enabled",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IngestEnabled",
							"value": {
								"value": "@bool(string(activity('Get Configuration').output.firstRow.IngestEnabled))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Ingest Enabled",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Ingest Enabled",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set App Insights Directory",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Default Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Include Null Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Landing Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Staging Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Environment Column Name",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('IngestEnabled')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Telemetry",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UsageAnalyticsIngest_Event",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"AppInsightsDirectory": {
												"value": "@variables('AppInsightsDirectory')",
												"type": "Expression"
											},
											"AppInsightsTopic": {
												"value": "@pipeline().parameters.AppInsightsTopic",
												"type": "Expression"
											},
											"TelemetryDateFolder": {
												"value": "@pipeline().parameters.TelemetryDateFolder",
												"type": "Expression"
											},
											"StagingColumnsMapping": {
												"value": "@json(variables('StagingColumnsMapping'))",
												"type": "Expression"
											},
											"LandingColumnsMapping": {
												"value": "@json(variables('LandingColumnsMapping'))",
												"type": "Expression"
											},
											"IncludeNullEnvironment": {
												"value": "@variables('IncludeNullEnvironment')",
												"type": "Expression"
											},
											"DefaultEnvironment": {
												"value": "@variables('DefaultEnvironment')",
												"type": "Expression"
											},
											"ToOtherEnvironment1": {
												"value": "@variables('ToOtherEnvironment1')",
												"type": "Expression"
											},
											"ToOtherEnvironment2": {
												"value": "@variables('ToOtherEnvironment2')",
												"type": "Expression"
											},
											"ToOtherEnvironment3": {
												"value": "@variables('ToOtherEnvironment3')",
												"type": "Expression"
											},
											"RunBy": {
												"value": "@pipeline().parameters.RunBy",
												"type": "Expression"
											},
											"ToOtherEnvironment4": {
												"value": "@variables('ToOtherEnvironment4')",
												"type": "Expression"
											},
											"ContextCustomDimensionsEnvironmentColumnName": {
												"value": "@variables('ContextCustomDimensionsEnvironmentColumnName')",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@variables('ContainerName')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Environment Column Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContextCustomDimensionsEnvironmentColumnName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContextCustomDimensionsEnvironmentColumnName)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContainerName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContainerName)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "Event"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"RunBy": {
						"type": "string"
					}
				},
				"variables": {
					"StagingColumnsMapping": {
						"type": "String"
					},
					"LandingColumnsMapping": {
						"type": "String"
					},
					"IncludeNullEnvironment": {
						"type": "Boolean"
					},
					"DefaultEnvironment": {
						"type": "String"
					},
					"ToOtherEnvironment1": {
						"type": "String"
					},
					"ToOtherEnvironment2": {
						"type": "String"
					},
					"ToOtherEnvironment3": {
						"type": "String"
					},
					"ToOtherEnvironment4": {
						"type": "String"
					},
					"AppInsightsDirectory": {
						"type": "String"
					},
					"IngestEnabled": {
						"type": "Boolean"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "String"
					},
					"ContainerName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsIngestConfig_DS')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsIngest_Event')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsGetConfig_Metrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Staging Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StagingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.StagingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LandingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.LandingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Include Null Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IncludeNullEnvironment",
							"value": {
								"value": "@bool(activity('Get Configuration').output.firstRow.IncludeNullEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Default Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DefaultEnvironment",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.DefaultEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment1",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment2",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment3",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetConfiguration]",
								"storedProcedureParameters": {
									"ConfigurationGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.AppInsightsTopic",
											"type": "Expression"
										}
									},
									"ConfigurationKey": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "UsageAnalyticsIngestConfig_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set App Insights Directory",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AppInsightsDirectory",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.AppInsightsDirectory)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment4",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Ingest Enabled",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IngestEnabled",
							"value": {
								"value": "@bool(string(activity('Get Configuration').output.firstRow.IngestEnabled))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Ingest Enabled",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Ingest Enabled",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set App Insights Directory",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Default Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Include Null Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Landing Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Staging Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Environment Column Name",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('IngestEnabled')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Telemetry",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UsageAnalyticsIngest_Metrics",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"AppInsightsDirectory": {
												"value": "@variables('AppInsightsDirectory')",
												"type": "Expression"
											},
											"AppInsightsTopic": {
												"value": "@pipeline().parameters.AppInsightsTopic",
												"type": "Expression"
											},
											"TelemetryDateFolder": {
												"value": "@pipeline().parameters.TelemetryDateFolder",
												"type": "Expression"
											},
											"StagingColumnsMapping": {
												"value": "@json(variables('StagingColumnsMapping'))",
												"type": "Expression"
											},
											"LandingColumnsMapping": {
												"value": "@json(variables('LandingColumnsMapping'))",
												"type": "Expression"
											},
											"IncludeNullEnvironment": {
												"value": "@variables('IncludeNullEnvironment')",
												"type": "Expression"
											},
											"DefaultEnvironment": {
												"value": "@variables('DefaultEnvironment')",
												"type": "Expression"
											},
											"ToOtherEnvironment1": {
												"value": "@variables('ToOtherEnvironment1')",
												"type": "Expression"
											},
											"ToOtherEnvironment2": {
												"value": "@variables('ToOtherEnvironment2')",
												"type": "Expression"
											},
											"ToOtherEnvironment3": {
												"value": "@variables('ToOtherEnvironment3')",
												"type": "Expression"
											},
											"RunBy": {
												"value": "@pipeline().parameters.RunBy",
												"type": "Expression"
											},
											"ToOtherEnvironment4": {
												"value": "@variables('ToOtherEnvironment4')",
												"type": "Expression"
											},
											"ContextCustomDimensionsEnvironmentColumnName": {
												"value": "@variables('ContextCustomDimensionsEnvironmentColumnName')",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@variables('ContainerName')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Environment Column Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContextCustomDimensionsEnvironmentColumnName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContextCustomDimensionsEnvironmentColumnName)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContainerName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContainerName)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "Event"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"RunBy": {
						"type": "string"
					}
				},
				"variables": {
					"StagingColumnsMapping": {
						"type": "String"
					},
					"LandingColumnsMapping": {
						"type": "String"
					},
					"IncludeNullEnvironment": {
						"type": "Boolean"
					},
					"DefaultEnvironment": {
						"type": "String"
					},
					"ToOtherEnvironment1": {
						"type": "String"
					},
					"ToOtherEnvironment2": {
						"type": "String"
					},
					"ToOtherEnvironment3": {
						"type": "String"
					},
					"ToOtherEnvironment4": {
						"type": "String"
					},
					"AppInsightsDirectory": {
						"type": "String"
					},
					"IngestEnabled": {
						"type": "Boolean"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "String"
					},
					"ContainerName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsIngestConfig_DS')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsIngest_Metrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsGetConfig_PageViewPerformance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Staging Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StagingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.StagingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LandingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.LandingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Include Null Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IncludeNullEnvironment",
							"value": {
								"value": "@bool(activity('Get Configuration').output.firstRow.IncludeNullEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Default Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DefaultEnvironment",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.DefaultEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment1",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment2",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment3",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetConfiguration]",
								"storedProcedureParameters": {
									"ConfigurationGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.AppInsightsTopic",
											"type": "Expression"
										}
									},
									"ConfigurationKey": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "UsageAnalyticsIngestConfig_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set App Insights Directory",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AppInsightsDirectory",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.AppInsightsDirectory)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment4",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Ingest Enabled",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IngestEnabled",
							"value": {
								"value": "@bool(string(activity('Get Configuration').output.firstRow.IngestEnabled))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Ingest Enabled",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Ingest Enabled",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set App Insights Directory",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Default Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Include Null Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Landing Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Staging Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Environment Column Name",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('IngestEnabled')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Telemetry",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UsageAnalyticsIngest_PageViewPerformance",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"AppInsightsDirectory": {
												"value": "@variables('AppInsightsDirectory')",
												"type": "Expression"
											},
											"AppInsightsTopic": {
												"value": "@pipeline().parameters.AppInsightsTopic",
												"type": "Expression"
											},
											"TelemetryDateFolder": {
												"value": "@pipeline().parameters.TelemetryDateFolder",
												"type": "Expression"
											},
											"StagingColumnsMapping": {
												"value": "@json(variables('StagingColumnsMapping'))",
												"type": "Expression"
											},
											"LandingColumnsMapping": {
												"value": "@json(variables('LandingColumnsMapping'))",
												"type": "Expression"
											},
											"IncludeNullEnvironment": {
												"value": "@variables('IncludeNullEnvironment')",
												"type": "Expression"
											},
											"DefaultEnvironment": {
												"value": "@variables('DefaultEnvironment')",
												"type": "Expression"
											},
											"ToOtherEnvironment1": {
												"value": "@variables('ToOtherEnvironment1')",
												"type": "Expression"
											},
											"ToOtherEnvironment2": {
												"value": "@variables('ToOtherEnvironment2')",
												"type": "Expression"
											},
											"ToOtherEnvironment3": {
												"value": "@variables('ToOtherEnvironment3')",
												"type": "Expression"
											},
											"RunBy": {
												"value": "@pipeline().parameters.RunBy",
												"type": "Expression"
											},
											"ToOtherEnvironment4": {
												"value": "@variables('ToOtherEnvironment4')",
												"type": "Expression"
											},
											"ContextCustomDimensionsEnvironmentColumnName": {
												"value": "@variables('ContextCustomDimensionsEnvironmentColumnName')",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@variables('ContainerName')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Environment Column Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContextCustomDimensionsEnvironmentColumnName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContextCustomDimensionsEnvironmentColumnName)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContainerName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContainerName)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "PageViews"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"RunBy": {
						"type": "string"
					}
				},
				"variables": {
					"StagingColumnsMapping": {
						"type": "String"
					},
					"LandingColumnsMapping": {
						"type": "String"
					},
					"IncludeNullEnvironment": {
						"type": "Boolean"
					},
					"DefaultEnvironment": {
						"type": "String"
					},
					"ToOtherEnvironment1": {
						"type": "String"
					},
					"ToOtherEnvironment2": {
						"type": "String"
					},
					"ToOtherEnvironment3": {
						"type": "String"
					},
					"ToOtherEnvironment4": {
						"type": "String"
					},
					"AppInsightsDirectory": {
						"type": "String"
					},
					"IngestEnabled": {
						"type": "Boolean"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "String"
					},
					"ContainerName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsIngestConfig_DS')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsIngest_PageViewPerformance')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsGetConfig_PageViews')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Staging Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StagingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.StagingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LandingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.LandingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Include Null Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IncludeNullEnvironment",
							"value": {
								"value": "@bool(activity('Get Configuration').output.firstRow.IncludeNullEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Default Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DefaultEnvironment",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.DefaultEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment1",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment2",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment3",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetConfiguration]",
								"storedProcedureParameters": {
									"ConfigurationGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.AppInsightsTopic",
											"type": "Expression"
										}
									},
									"ConfigurationKey": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "UsageAnalyticsIngestConfig_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set App Insights Directory",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AppInsightsDirectory",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.AppInsightsDirectory)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment4",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Ingest Enabled",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Ingest Enabled",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set App Insights Directory",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Default Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Include Null Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Landing Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Staging Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Environment Column Name",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('IngestEnabled')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Telemetry",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UsageAnalyticsIngest_PageViews",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"AppInsightsDirectory": {
												"value": "@variables('AppInsightsDirectory')",
												"type": "Expression"
											},
											"AppInsightsTopic": {
												"value": "@pipeline().parameters.AppInsightsTopic",
												"type": "Expression"
											},
											"TelemetryDateFolder": {
												"value": "@pipeline().parameters.TelemetryDateFolder",
												"type": "Expression"
											},
											"StagingColumnsMapping": {
												"value": "@json(variables('StagingColumnsMapping'))",
												"type": "Expression"
											},
											"LandingColumnsMapping": {
												"value": "@json(variables('LandingColumnsMapping'))",
												"type": "Expression"
											},
											"IncludeNullEnvironment": {
												"value": "@variables('IncludeNullEnvironment')",
												"type": "Expression"
											},
											"DefaultEnvironment": {
												"value": "@variables('DefaultEnvironment')",
												"type": "Expression"
											},
											"ToOtherEnvironment1": {
												"value": "@variables('ToOtherEnvironment1')",
												"type": "Expression"
											},
											"ToOtherEnvironment2": {
												"value": "@variables('ToOtherEnvironment2')",
												"type": "Expression"
											},
											"ToOtherEnvironment3": {
												"value": "@variables('ToOtherEnvironment3')",
												"type": "Expression"
											},
											"RunBy": {
												"value": "@pipeline().parameters.RunBy",
												"type": "Expression"
											},
											"ToOtherEnvironment4": {
												"value": "@variables('ToOtherEnvironment4')",
												"type": "Expression"
											},
											"ContextCustomDimensionsEnvironmentColumnName": {
												"value": "@variables('ContextCustomDimensionsEnvironmentColumnName')",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@variables('ContainerName')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Ingest Enabled",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IngestEnabled",
							"value": {
								"value": "@bool(string(activity('Get Configuration').output.firstRow.IngestEnabled))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Environment Column Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContextCustomDimensionsEnvironmentColumnName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContextCustomDimensionsEnvironmentColumnName)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContainerName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContainerName)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "PageViews"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"RunBy": {
						"type": "string"
					}
				},
				"variables": {
					"StagingColumnsMapping": {
						"type": "String"
					},
					"LandingColumnsMapping": {
						"type": "String"
					},
					"IncludeNullEnvironment": {
						"type": "Boolean"
					},
					"DefaultEnvironment": {
						"type": "String"
					},
					"ToOtherEnvironment1": {
						"type": "String"
					},
					"ToOtherEnvironment2": {
						"type": "String"
					},
					"ToOtherEnvironment3": {
						"type": "String"
					},
					"ToOtherEnvironment4": {
						"type": "String"
					},
					"AppInsightsDirectory": {
						"type": "String"
					},
					"IngestEnabled": {
						"type": "Boolean"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "String"
					},
					"ContainerName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsIngestConfig_DS')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsIngest_PageViews')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Default If Telemetry Date Param Blank",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.TelemetryDateFolder),equals(pipeline().parameters.TelemetryDateFolder,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Telemetry Date Folder to Param Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@pipeline().parameters.TelemetryDateFolder",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Telemetry Date Folder to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Config Ingest PageViews",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UsageAnalyticsGetConfig_PageViews",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppInsightsTopic": "PageViews",
								"TelemetryDateFolder": {
									"value": "@variables('TelemetryDateFolder')",
									"type": "Expression"
								},
								"RunBy": {
									"value": "@pipeline().parameters.RunBy",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get Config Ingest PageViewPerformance",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UsageAnalyticsGetConfig_PageViewPerformance",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppInsightsTopic": "PageViewPerformance",
								"TelemetryDateFolder": {
									"value": "@variables('TelemetryDateFolder')",
									"type": "Expression"
								},
								"RunBy": {
									"value": "@pipeline().parameters.RunBy",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get Config Ingest Event",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UsageAnalyticsGetConfig_Event",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppInsightsTopic": "Event",
								"TelemetryDateFolder": {
									"value": "@variables('TelemetryDateFolder')",
									"type": "Expression"
								},
								"RunBy": {
									"value": "@pipeline().parameters.RunBy",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get Config Ingest Metrics",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UsageAnalyticsGetConfig_Metrics",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppInsightsTopic": "Metrics",
								"TelemetryDateFolder": {
									"value": "@variables('TelemetryDateFolder')",
									"type": "Expression"
								},
								"RunBy": {
									"value": "@pipeline().parameters.RunBy",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"TelemetryDateFolder": {
						"type": "string",
						"defaultValue": "PreviousDate"
					},
					"RunBy": {
						"type": "string"
					}
				},
				"variables": {
					"TelemetryDateFolder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsGetConfig_PageViews')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsGetConfig_PageViewPerformance')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsGetConfig_Event')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsGetConfig_Metrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngest_Event')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Stage Telemetry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear Staged Telemetry for Same Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "TelemetryIngestBatchId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "TelemetryDate",
										"value": {
											"value": "@variables('TelemetryDateFolder')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.blob",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"value": "@pipeline().parameters.StagingColumnsMapping",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS",
								"type": "DatasetReference",
								"parameters": {
									"AppInsightsDirectory": {
										"value": "@pipeline().parameters.AppInsightsDirectory",
										"type": "Expression"
									},
									"AppInsightsTopic": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"TelemetryDate": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"ContainerName": {
										"value": "@pipeline().parameters.ContainerName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UsageAnalyticsStagingEventTable_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Purge Staged Telemetry",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Distribute to Portal Other Environment1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Distribute to Portal Other Environment1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment1))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment1",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingEventTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryEventTable_OtherEnv1_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment2))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment2",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingEventTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryEventTable_OtherEnv2_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Environment",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "true",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": {
														"value": "@pipeline().parameters.IncludeNullEnvironment",
														"type": "Expression"
													}
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.DefaultEnvironment",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingEventTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryEventTable_DefaultEnv_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment3",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment3))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 3",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment3",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingEventTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryEventTable_OtherEnv3_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Default If Telemetry Date Param Blank",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.TelemetryDateFolder),equals(pipeline().parameters.TelemetryDateFolder,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Telemetry Date Folder to Param Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@pipeline().parameters.TelemetryDateFolder",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Telemetry Date Folder to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment4",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment4))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 4",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment4",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingEventTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryEventTable_OtherEnv4_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Clear Staged Telemetry for Same Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"AppInsightsDirectory": {
						"type": "string",
						"defaultValue": "n21portalanalyticsdevappinsights_24217191a7f749f1bde7c270d326c8e5"
					},
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "Event"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"StagingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"path": "$['view'][0]['name']"
									},
									"sink": {
										"name": "ViewName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['durationMetric']['value']"
									},
									"sink": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['url']"
									},
									"sink": {
										"name": "ViewUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['urlData']['base']"
									},
									"sink": {
										"name": "ViewUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['urlData']['host']"
									},
									"sink": {
										"name": "ViewUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['internal']['data']['id']"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['data']['eventTime']"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['id']"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['osVersion']"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['deviceName']"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browser']"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browserVersion']"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['anonId']"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['authId']"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['id']"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['isFirst']"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['id']"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['parentId']"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['continent']"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['country']"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][0]['PortalId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][1]['PortalEnvironment']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][2]['PageId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][3]['ContentGroupName']"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['TelemetryIngestBatchId']"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"path": "$['TelemetryDate']"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							],
							"collectionReference": ""
						}
					},
					"LandingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"name": "InternalDataId",
										"type": "String"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "ViewName",
										"type": "String"
									},
									"sink": {
										"name": "ViewName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									},
									"sink": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ViewUrl",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewUrlDataBase",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewUrlDataHost",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceId",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceName",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAuthId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAnonId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionId",
										"type": "String"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"name": "ContextOperationId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextOperationParentId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationContinent",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationCountry",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "TelemetryDate",
										"type": "String"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							]
						}
					},
					"IncludeNullEnvironment": {
						"type": "string",
						"defaultValue": "true"
					},
					"DefaultEnvironment": {
						"type": "string",
						"defaultValue": "dev"
					},
					"ToOtherEnvironment1": {
						"type": "string",
						"defaultValue": "devint"
					},
					"ToOtherEnvironment2": {
						"type": "string",
						"defaultValue": "int"
					},
					"ToOtherEnvironment3": {
						"type": "string",
						"defaultValue": "qa"
					},
					"RunBy": {
						"type": "string"
					},
					"ToOtherEnvironment4": {
						"type": "string",
						"defaultValue": "stresstest"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "string"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "n21portalanalyticsblobstg"
					}
				},
				"variables": {
					"TelemetryDateFolder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsStagingEventTable_DS')]",
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryEventTable_OtherEnv1_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryEventTable_OtherEnv2_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryEventTable_DefaultEnv_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryEventTable_OtherEnv3_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryEventTable_OtherEnv4_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngest_Messages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Telemetry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Default Value If DateToLoad is Empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "exsav2-ai-container/exai_c332c05611a745beb25e7c088db74cfa/Messages/*.blob"
							},
							{
								"name": "Destination",
								"value": "UsageAnalytics.Messages"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "PipelineRunId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@variables('DateToLoad')",
										"type": "Expression"
									},
									"wildcardFolderPath": {
										"value": "@concat('exai_c332c05611a745beb25e7c088db74cfa/Messages/', variables('DateToLoad'))",
										"type": "Expression"
									},
									"wildcardFileName": "*.blob",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['message'][0]['raw']"
										},
										"sink": {
											"name": "MessageRaw",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['message'][0]['severityLevel']"
										},
										"sink": {
											"name": "MessageSeverityLevel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['internal']['data']['documentVersion']"
										},
										"sink": {
											"name": "InternalDataDocVer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['application']['version']"
										},
										"sink": {
											"name": "ContextAppVersion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['data']['eventTime']"
										},
										"sink": {
											"name": "ContextDataEventTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['data']['isSynthetic']"
										},
										"sink": {
											"name": "ContextDataIsSynthetic",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['context']['data']['samplingRate']"
										},
										"sink": {
											"name": "ContextDataSamplingRate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['device']['type']"
										},
										"sink": {
											"name": "ContextDataDeviceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['device']['roleInstance']"
										},
										"sink": {
											"name": "ContextDataDeviceRoleInstance",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['device']['roleName']"
										},
										"sink": {
											"name": "ContextDataDeviceRoleName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['session']['isFirst']"
										},
										"sink": {
											"name": "ContextDataSessionIsFirst",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['context']['operation']['id']"
										},
										"sink": {
											"name": "ContextDataOperationId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['operation']['parentId']"
										},
										"sink": {
											"name": "ContextDataOperationParentId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['operation']['name']"
										},
										"sink": {
											"name": "ContextDataOperationName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['location']['clientip']"
										},
										"sink": {
											"name": "ContextLocationClientIp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['location']['continent']"
										},
										"sink": {
											"name": "ContextLocationContinent",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['location']['country']"
										},
										"sink": {
											"name": "ContextLocationCountry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['TraceId']"
										},
										"sink": {
											"name": "ContextCustomDimTraceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['CategoryName']"
										},
										"sink": {
											"name": "ContextCustomDimCategoryName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['{OriginalFormat}']"
										},
										"sink": {
											"name": "ContextCustomDimOriginalFormat",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['ParentId']"
										},
										"sink": {
											"name": "ContextCustomDimParentId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['RequestPath']"
										},
										"sink": {
											"name": "ContextCustomDimRequestPath",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['AspNetCoreEnvironment']"
										},
										"sink": {
											"name": "ContextCustomDimAspNetCoreEnvironment",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['EventId']"
										},
										"sink": {
											"name": "ContextCustomDimEventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['Method']"
										},
										"sink": {
											"name": "ContextCustomDimMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['Scheme']"
										},
										"sink": {
											"name": "ContextCustomDimScheme",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['Path']"
										},
										"sink": {
											"name": "ContextCustomDimPath",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['Protocol']"
										},
										"sink": {
											"name": "ContextCustomDimProtocol",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['Host']"
										},
										"sink": {
											"name": "ContextCustomDimHost",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['context']['custom']['dimensions'][0]['QueryString']"
										},
										"sink": {
											"name": "ContextCustomDimQueryString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['PipelineRunId']"
										},
										"sink": {
											"name": "PipelineRunId"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "UsageAnalyticsMessagesTelemetryBlobJsonByDate_DS",
								"type": "DatasetReference",
								"parameters": {
									"DateToLoad": {
										"value": "@variables('DateToLoad')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UsageAnalyticsTelemetryMessagesTable_DS1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Default Value If DateToLoad is Empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.DateToLoad),equals(pipeline().parameters.DateToLoad,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set DateToLoad to Parameter Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DateToLoad",
										"value": {
											"value": "@pipeline().parameters.DateToLoad",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set DateToLoad to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DateToLoad",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"DateToLoad": {
						"type": "string",
						"defaultValue": "PreviousDate"
					}
				},
				"variables": {
					"DateToLoad": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsMessagesTelemetryBlobJsonByDate_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryMessagesTable_DS1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngest_Metrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Stage Telemetry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear Staged Telemetry for Same Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "TelemetryIngestBatchId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "TelemetryDate",
										"value": {
											"value": "@variables('TelemetryDateFolder')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.blob",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"value": "@pipeline().parameters.StagingColumnsMapping",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS",
								"type": "DatasetReference",
								"parameters": {
									"AppInsightsDirectory": {
										"value": "@pipeline().parameters.AppInsightsDirectory",
										"type": "Expression"
									},
									"AppInsightsTopic": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"TelemetryDate": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"ContainerName": {
										"value": "@pipeline().parameters.ContainerName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Purge Staged Telemetry",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Distribute to Portal Other Environment1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Distribute to Portal Other Environment1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment1))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment1",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryMetricsTable_OtherEnv1_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment2))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment2",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryMetricsTable_OtherEnv2_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Environment",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "true",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": {
														"value": "@pipeline().parameters.IncludeNullEnvironment",
														"type": "Expression"
													}
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.DefaultEnvironment",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryMetricsTable_DefaultEnv_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment3",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment3))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 3",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment3",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryMetricsTable_OtherEnv3_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Default If Telemetry Date Param Blank",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.TelemetryDateFolder),equals(pipeline().parameters.TelemetryDateFolder,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Telemetry Date Folder to Param Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@pipeline().parameters.TelemetryDateFolder",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Telemetry Date Folder to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment4",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment4))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 4",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment4",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryMetricsTable_OtherEnv4_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Clear Staged Telemetry for Same Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"AppInsightsDirectory": {
						"type": "string",
						"defaultValue": "n21portalanalyticsdevappinsights_24217191a7f749f1bde7c270d326c8e5"
					},
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "Metrics"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"StagingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"path": "$['view'][0]['name']"
									},
									"sink": {
										"name": "ViewName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['durationMetric']['value']"
									},
									"sink": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['url']"
									},
									"sink": {
										"name": "ViewUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['urlData']['base']"
									},
									"sink": {
										"name": "ViewUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['urlData']['host']"
									},
									"sink": {
										"name": "ViewUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['internal']['data']['id']"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['data']['eventTime']"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['id']"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['osVersion']"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['deviceName']"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browser']"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browserVersion']"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['anonId']"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['authId']"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['id']"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['isFirst']"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['id']"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['parentId']"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['continent']"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['country']"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][0]['PortalId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][1]['PortalEnvironment']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][2]['PageId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][3]['ContentGroupName']"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['TelemetryIngestBatchId']"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"path": "$['TelemetryDate']"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							],
							"collectionReference": ""
						}
					},
					"LandingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"name": "InternalDataId",
										"type": "String"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "ViewName",
										"type": "String"
									},
									"sink": {
										"name": "ViewName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									},
									"sink": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ViewUrl",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewUrlDataBase",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewUrlDataHost",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceId",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceName",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAuthId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAnonId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionId",
										"type": "String"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"name": "ContextOperationId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextOperationParentId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationContinent",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationCountry",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "TelemetryDate",
										"type": "String"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							]
						}
					},
					"IncludeNullEnvironment": {
						"type": "string",
						"defaultValue": "true"
					},
					"DefaultEnvironment": {
						"type": "string",
						"defaultValue": "dev"
					},
					"ToOtherEnvironment1": {
						"type": "string",
						"defaultValue": "devint"
					},
					"ToOtherEnvironment2": {
						"type": "string",
						"defaultValue": "int"
					},
					"ToOtherEnvironment3": {
						"type": "string",
						"defaultValue": "qa"
					},
					"RunBy": {
						"type": "string"
					},
					"ToOtherEnvironment4": {
						"type": "string",
						"defaultValue": "stresstest"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "string"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "n21portalanalyticsblobstg"
					}
				},
				"variables": {
					"TelemetryDateFolder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsStagingMetricsTable_DS')]",
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryMetricsTable_OtherEnv1_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryMetricsTable_OtherEnv2_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryMetricsTable_DefaultEnv_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryMetricsTable_OtherEnv3_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryMetricsTable_OtherEnv4_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngest_PageViewPerformance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Stage Telemetry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear Staged Telemetry for Same Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "TelemetryIngestBatchId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "TelemetryDate",
										"value": {
											"value": "@variables('TelemetryDateFolder')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.blob",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"value": "@pipeline().parameters.StagingColumnsMapping",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS",
								"type": "DatasetReference",
								"parameters": {
									"AppInsightsDirectory": {
										"value": "@pipeline().parameters.AppInsightsDirectory",
										"type": "Expression"
									},
									"AppInsightsTopic": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"TelemetryDate": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"ContainerName": {
										"value": "@pipeline().parameters.ContainerName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Purge Staged Telemetry",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Distribute to Portal Other Environment1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Distribute to Portal Other Environment1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment1))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment1",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv1_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment2))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment2",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv2_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Environment",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "true",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": {
														"value": "@pipeline().parameters.IncludeNullEnvironment",
														"type": "Expression"
													}
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.DefaultEnvironment",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewPerformanceTable_DefaultEnv_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment3",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment3))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 3",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment3",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv3_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Default If Telemetry Date Param Blank",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.TelemetryDateFolder),equals(pipeline().parameters.TelemetryDateFolder,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Telemetry Date Folder to Param Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@pipeline().parameters.TelemetryDateFolder",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Telemetry Date Folder to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment4",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment4))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 4",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment4",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv3_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Clear Staged Telemetry for Same Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"AppInsightsDirectory": {
						"type": "string",
						"defaultValue": "n21portalanalyticsdevappinsights_24217191a7f749f1bde7c270d326c8e5"
					},
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "PageViewPerformance"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"StagingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"path": "$['clientPerformance'][0]['name']"
									},
									"sink": {
										"name": "ClientPerformanceName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['clientProcess']['value']"
									},
									"sink": {
										"name": "ClientPerformanceClientProcessValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['receiveRequest']['value']"
									},
									"sink": {
										"name": "ClientPerformanceReceiveRequestValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['sendRequest']['value']"
									},
									"sink": {
										"name": "ClientPerformanceSendRequestValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['total']['value']"
									},
									"sink": {
										"name": "ClientPerformanceTotalValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['url']"
									},
									"sink": {
										"name": "ClientPerformanceUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['urlData']['base']"
									},
									"sink": {
										"name": "ClientPerformanceUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['urlData']['host']"
									},
									"sink": {
										"name": "ClientPerformanceUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['internal']['data']['id']"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['data']['eventTime']"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['id']"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['osVersion']"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['deviceName']"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browser']"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browserVersion']"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['anonId']"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['authId']"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['id']"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['isFirst']"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['id']"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['parentId']"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['continent']"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['country']"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][0]['PortalId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][1]['PortalEnvironment']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][2]['PageId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][3]['ContentGroupName']"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['TelemetryIngestBatchId']"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"path": "$['TelemetryDate']"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							],
							"collectionReference": ""
						}
					},
					"LandingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"name": "InternalDataId",
										"type": "String"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceName",
										"type": "String"
									},
									"sink": {
										"name": "ClientPerformanceName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceClientProcessValue",
										"type": "Double"
									},
									"sink": {
										"name": "ClientPerformanceClientProcessValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceReceiveRequestValue",
										"type": "Double"
									},
									"sink": {
										"name": "ClientPerformanceReceiveRequestValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceSendRequestValue",
										"type": "Double"
									},
									"sink": {
										"name": "ClientPerformanceSendRequestValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceTotalValue",
										"type": "Double"
									},
									"sink": {
										"name": "ClientPerformanceTotalValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceUrl",
										"type": "String"
									},
									"sink": {
										"name": "ClientPerformanceUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceUrlDataBase",
										"type": "String"
									},
									"sink": {
										"name": "ClientPerformanceUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceUrlDataHost",
										"type": "String"
									},
									"sink": {
										"name": "ClientPerformanceUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceId",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceName",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAuthId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAnonId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionId",
										"type": "String"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"name": "ContextOperationId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextOperationParentId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationContinent",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationCountry",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "TelemetryDate",
										"type": "String"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							]
						}
					},
					"IncludeNullEnvironment": {
						"type": "string",
						"defaultValue": "true"
					},
					"DefaultEnvironment": {
						"type": "string",
						"defaultValue": "dev"
					},
					"ToOtherEnvironment1": {
						"type": "string",
						"defaultValue": "devint"
					},
					"ToOtherEnvironment2": {
						"type": "string",
						"defaultValue": "int"
					},
					"ToOtherEnvironment3": {
						"type": "string",
						"defaultValue": "qa"
					},
					"RunBy": {
						"type": "string"
					},
					"ToOtherEnvironment4": {
						"type": "string",
						"defaultValue": "stresstest"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "string"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "n21portalanalyticsblobstg"
					}
				},
				"variables": {
					"TelemetryDateFolder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsStagingPageViewPerformanceTable_DS')]",
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv1_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv2_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryPageViewPerformanceTable_DefaultEnv_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv3_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngest_PageViews')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Stage Telemetry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear Staged Telemetry for Same Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "TelemetryIngestBatchId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "TelemetryDate",
										"value": {
											"value": "@variables('TelemetryDateFolder')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.blob",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"value": "@pipeline().parameters.StagingColumnsMapping",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS",
								"type": "DatasetReference",
								"parameters": {
									"AppInsightsDirectory": {
										"value": "@pipeline().parameters.AppInsightsDirectory",
										"type": "Expression"
									},
									"AppInsightsTopic": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"TelemetryDate": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"ContainerName": {
										"value": "@pipeline().parameters.ContainerName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Purge Staged Telemetry",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Distribute to Portal Other Environment1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Distribute to Portal Other Environment1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment1))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment1",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewsTable_OtherEnv1_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment2))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment2",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewsTable_OtherEnv2_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Environment",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "true",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": {
														"value": "@pipeline().parameters.IncludeNullEnvironment",
														"type": "Expression"
													}
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.DefaultEnvironment",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewsTable_DefaultEnv_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment3",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment3))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 3",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment3",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewsTable_OtherEnv3_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Default If Telemetry Date Param Blank",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.TelemetryDateFolder),equals(pipeline().parameters.TelemetryDateFolder,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Telemetry Date Folder to Param Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@pipeline().parameters.TelemetryDateFolder",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Telemetry Date Folder to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment4",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment4))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 4",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment4",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewsTable_OtherEnv4_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Clear Staged Telemetry for Same Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"AppInsightsDirectory": {
						"type": "string",
						"defaultValue": "n21portalanalyticsdevappinsights_24217191a7f749f1bde7c270d326c8e5"
					},
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "PageViews"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"StagingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"path": "$['view'][0]['name']"
									},
									"sink": {
										"name": "ViewName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['durationMetric']['value']"
									},
									"sink": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['url']"
									},
									"sink": {
										"name": "ViewUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['urlData']['base']"
									},
									"sink": {
										"name": "ViewUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['urlData']['host']"
									},
									"sink": {
										"name": "ViewUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['internal']['data']['id']"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['data']['eventTime']"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['id']"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['osVersion']"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['deviceName']"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browser']"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browserVersion']"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['anonId']"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['authId']"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['id']"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['isFirst']"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['id']"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['parentId']"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['continent']"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['country']"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][0]['PortalId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][1]['PortalEnvironment']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][2]['PageId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][3]['ContentGroupName']"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['TelemetryIngestBatchId']"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"path": "$['TelemetryDate']"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							],
							"collectionReference": ""
						}
					},
					"LandingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"name": "InternalDataId",
										"type": "String"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "ViewName",
										"type": "String"
									},
									"sink": {
										"name": "ViewName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									},
									"sink": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ViewUrl",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewUrlDataBase",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewUrlDataHost",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceId",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceName",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAuthId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAnonId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionId",
										"type": "String"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"name": "ContextOperationId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextOperationParentId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationContinent",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationCountry",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "TelemetryDate",
										"type": "String"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							]
						}
					},
					"IncludeNullEnvironment": {
						"type": "string",
						"defaultValue": "true"
					},
					"DefaultEnvironment": {
						"type": "string",
						"defaultValue": "dev"
					},
					"ToOtherEnvironment1": {
						"type": "string",
						"defaultValue": "devint"
					},
					"ToOtherEnvironment2": {
						"type": "string",
						"defaultValue": "int"
					},
					"ToOtherEnvironment3": {
						"type": "string",
						"defaultValue": "qa"
					},
					"RunBy": {
						"type": "string"
					},
					"ToOtherEnvironment4": {
						"type": "string",
						"defaultValue": "stresstest"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "string"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "n21portalanalyticsblobstg"
					}
				},
				"variables": {
					"TelemetryDateFolder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsStagingPageViewsTable_DS')]",
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryPageViewsTable_OtherEnv1_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryPageViewsTable_OtherEnv2_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryPageViewsTable_DefaultEnv_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryPageViewsTable_OtherEnv3_DS')]",
				"[concat(variables('factoryId'), '/datasets/UsageAnalyticsTelemetryPageViewsTable_OtherEnv4_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXAI_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXAI_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "insights-logs-auditlogs"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXAI_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXSQL_AAL_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InsightsLogsAuditLogsBlobJsonByDate_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXAI_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "tenantId=42032c36-c513-4d46-bec4-303b1d4e6c42",
						"container": "insights-logs-auditlogs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"time": {
							"type": "string"
						},
						"resourceId": {
							"type": "string"
						},
						"operationName": {
							"type": "string"
						},
						"operationVersion": {
							"type": "string"
						},
						"category": {
							"type": "string"
						},
						"tenantId": {
							"type": "string"
						},
						"resultSignature": {
							"type": "string"
						},
						"resultDescription": {
							"type": "string"
						},
						"durationMs": {
							"type": "integer"
						},
						"callerIpAddress": {
							"type": "string"
						},
						"correlationId": {
							"type": "string"
						},
						"level": {
							"type": "string"
						},
						"properties": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"category": {
									"type": "string"
								},
								"correlationId": {
									"type": "string"
								},
								"result": {
									"type": "string"
								},
								"resultReason": {
									"type": "string"
								},
								"activityDisplayName": {
									"type": "string"
								},
								"activityDateTime": {
									"type": "string"
								},
								"loggedByService": {
									"type": "string"
								},
								"operationType": {
									"type": "string"
								},
								"initiatedBy": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"id": {
													"type": "null"
												},
												"displayName": {
													"type": "string"
												},
												"userPrincipalName": {
													"type": "string"
												},
												"ipAddress": {
													"type": "string"
												},
												"roles": {
													"type": "array"
												}
											}
										},
										"app": {
											"type": "object",
											"properties": {
												"appId": {
													"type": "string"
												},
												"displayName": {
													"type": "null"
												},
												"servicePrincipalId": {
													"type": "null"
												},
												"servicePrincipalName": {
													"type": "string"
												}
											}
										}
									}
								},
								"targetResources": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"displayName": {
												"type": "null"
											},
											"type": {
												"type": "string"
											},
											"modifiedProperties": {
												"type": "array"
											},
											"administrativeUnits": {
												"type": "array"
											}
										}
									}
								},
								"additionalDetails": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"key": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"identity": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXAI_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InsightsLogsAuditLogsTable_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "time",
						"type": "nvarchar"
					},
					{
						"name": "resourceId",
						"type": "nvarchar"
					},
					{
						"name": "operationName",
						"type": "nvarchar"
					},
					{
						"name": "operationVersion",
						"type": "nvarchar"
					},
					{
						"name": "category",
						"type": "nvarchar"
					},
					{
						"name": "tenantId",
						"type": "nvarchar"
					},
					{
						"name": "resultSignature",
						"type": "nvarchar"
					},
					{
						"name": "resultDescription",
						"type": "nvarchar"
					},
					{
						"name": "durationMs",
						"type": "int",
						"precision": 10
					},
					{
						"name": "callerIpAddress",
						"type": "nvarchar"
					},
					{
						"name": "correlationId",
						"type": "nvarchar"
					},
					{
						"name": "level",
						"type": "nvarchar"
					},
					{
						"name": "PropId",
						"type": "nvarchar"
					},
					{
						"name": "PropCategory",
						"type": "nvarchar"
					},
					{
						"name": "PropCorrelationId",
						"type": "nvarchar"
					},
					{
						"name": "PropResult",
						"type": "nvarchar"
					},
					{
						"name": "PropResultReason",
						"type": "nvarchar"
					},
					{
						"name": "PropActivityDisplayName",
						"type": "nvarchar"
					},
					{
						"name": "PropActivityDateTime",
						"type": "nvarchar"
					},
					{
						"name": "PropLoggedByService",
						"type": "nvarchar"
					},
					{
						"name": "PropOperationType",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByUserId",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByUserDisplayName",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByUserPrincipalName",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByUserIpAddress",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByAppId",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByAppDisplayName",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByAppServicePrincipalId",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByAppServicePrincipalName",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByTargetResourceId",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByTargetResourceDisplayName",
						"type": "nvarchar"
					},
					{
						"name": "PropInitiatedByTargetResourceType",
						"type": "nvarchar"
					},
					{
						"name": "Identity",
						"type": "nvarchar"
					},
					{
						"name": "PipelineRunId",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "InsightsLogs",
					"table": "AuditLogs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InsightsLogsSignInLogsBlobJsonByDate_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXAI_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.json",
						"folderPath": "tenantId=42032c36-c513-4d46-bec4-303b1d4e6c42",
						"container": "insights-logs-signinlogs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"time": {
							"type": "string"
						},
						"resourceId": {
							"type": "string"
						},
						"operationName": {
							"type": "string"
						},
						"operationVersion": {
							"type": "string"
						},
						"category": {
							"type": "string"
						},
						"tenantId": {
							"type": "string"
						},
						"resultType": {
							"type": "string"
						},
						"resultSignature": {
							"type": "string"
						},
						"resultDescription": {
							"type": "string"
						},
						"durationMs": {
							"type": "integer"
						},
						"callerIpAddress": {
							"type": "string"
						},
						"correlationId": {
							"type": "string"
						},
						"identity": {
							"type": "string"
						},
						"Level": {
							"type": "integer"
						},
						"properties": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"createdDateTime": {
									"type": "string"
								},
								"userDisplayName": {
									"type": "string"
								},
								"userPrincipalName": {
									"type": "string"
								},
								"userId": {
									"type": "string"
								},
								"appId": {
									"type": "string"
								},
								"appDisplayName": {
									"type": "string"
								},
								"ipAddress": {
									"type": "string"
								},
								"status": {
									"type": "object",
									"properties": {
										"errorCode": {
											"type": "integer"
										},
										"failureReason": {
											"type": "string"
										},
										"additionalDetails": {
											"type": "string"
										}
									}
								},
								"userAgent": {
									"type": "string"
								},
								"deviceDetail": {
									"type": "object",
									"properties": {
										"deviceId": {
											"type": "string"
										},
										"operatingSystem": {
											"type": "string"
										},
										"browser": {
											"type": "string"
										}
									}
								},
								"location": {
									"type": "object",
									"properties": {
										"geoCoordinates": {
											"type": "object",
											"properties": {
												"latitude": {
													"type": "number"
												},
												"longitude": {
													"type": "number"
												}
											}
										},
										"city": {
											"type": "string"
										},
										"state": {
											"type": "string"
										},
										"countryOrRegion": {
											"type": "string"
										}
									}
								},
								"mfaDetail": {
									"type": "object",
									"properties": {
										"authMethod": {
											"type": "string"
										},
										"authDetail": {
											"type": "string"
										}
									}
								},
								"correlationId": {
									"type": "string"
								},
								"conditionalAccessStatus": {
									"type": "string"
								},
								"appliedConditionalAccessPolicies": {
									"type": "array"
								},
								"originalRequestId": {
									"type": "string"
								},
								"isInteractive": {
									"type": "boolean"
								},
								"tokenIssuerName": {
									"type": "string"
								},
								"tokenIssuerType": {
									"type": "string"
								},
								"authenticationProcessingDetails": {
									"type": "array"
								},
								"networkLocationDetails": {
									"type": "array"
								},
								"processingTimeInMilliseconds": {
									"type": "integer"
								},
								"riskDetail": {
									"type": "string"
								},
								"riskLevelAggregated": {
									"type": "string"
								},
								"riskLevelDuringSignIn": {
									"type": "string"
								},
								"riskState": {
									"type": "string"
								},
								"riskEventTypes": {
									"type": "array"
								},
								"riskEventTypes_v2": {
									"type": "array"
								},
								"resourceDisplayName": {
									"type": "string"
								},
								"authenticationDetails": {
									"type": "array"
								},
								"authenticationRequirementPolicies": {
									"type": "array"
								},
								"authenticationRequirement": {
									"type": "string"
								},
								"servicePrincipalId": {
									"type": "string"
								},
								"accountType": {
									"type": "integer"
								},
								"clientAppUsed": {
									"type": "string"
								},
								"resourceId": {
									"type": "string"
								},
								"alternateSignInName": {
									"type": "string"
								}
							}
						},
						"location": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXAI_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InsightsLogsSignInLogsTable_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "time",
						"type": "nvarchar"
					},
					{
						"name": "resourceId",
						"type": "nvarchar"
					},
					{
						"name": "operationName",
						"type": "nvarchar"
					},
					{
						"name": "operationVersion",
						"type": "nvarchar"
					},
					{
						"name": "category",
						"type": "nvarchar"
					},
					{
						"name": "tenantId",
						"type": "nvarchar"
					},
					{
						"name": "resultType",
						"type": "nvarchar"
					},
					{
						"name": "resultSignature",
						"type": "nvarchar"
					},
					{
						"name": "resultDescription",
						"type": "nvarchar"
					},
					{
						"name": "durationMs",
						"type": "int",
						"precision": 10
					},
					{
						"name": "callerIpAddress",
						"type": "nvarchar"
					},
					{
						"name": "correlationId",
						"type": "nvarchar"
					},
					{
						"name": "identity",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "PropId",
						"type": "nvarchar"
					},
					{
						"name": "PropCreatedDateTime",
						"type": "nvarchar"
					},
					{
						"name": "PropUserDisplayName",
						"type": "nvarchar"
					},
					{
						"name": "PropUserPrincipalName",
						"type": "nvarchar"
					},
					{
						"name": "PropUserId",
						"type": "nvarchar"
					},
					{
						"name": "PropAppId",
						"type": "nvarchar"
					},
					{
						"name": "PropAppDisplayName",
						"type": "nvarchar"
					},
					{
						"name": "PropIpAddress",
						"type": "nvarchar"
					},
					{
						"name": "PropStatusErrorCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PropStatusFailureReason",
						"type": "nvarchar"
					},
					{
						"name": "PropUserAgent",
						"type": "nvarchar"
					},
					{
						"name": "PropDeviceDetailId",
						"type": "nvarchar"
					},
					{
						"name": "PropDeviceDetailOS",
						"type": "nvarchar"
					},
					{
						"name": "PropDeviceDetailBrowser",
						"type": "nvarchar"
					},
					{
						"name": "PropLocGeoCoorLat",
						"type": "nvarchar"
					},
					{
						"name": "PropLocGeoCoorLong",
						"type": "nvarchar"
					},
					{
						"name": "PropLocCity",
						"type": "nvarchar"
					},
					{
						"name": "PropLocState",
						"type": "nvarchar"
					},
					{
						"name": "PropLocCountryOrRegion",
						"type": "nvarchar"
					},
					{
						"name": "PropMfaDetailAuthMethod",
						"type": "nvarchar"
					},
					{
						"name": "PropMfaDetailAuthDetail",
						"type": "nvarchar"
					},
					{
						"name": "PropConditionalAccessStatus",
						"type": "nvarchar"
					},
					{
						"name": "PropOriginalRequestId",
						"type": "nvarchar"
					},
					{
						"name": "PropIsInteractive",
						"type": "bit"
					},
					{
						"name": "PropTokenIssuerName",
						"type": "nvarchar"
					},
					{
						"name": "PropTokenIssuerType",
						"type": "nvarchar"
					},
					{
						"name": "PropProcessingTimeInMilliseconds",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PropRiskDetail",
						"type": "nvarchar"
					},
					{
						"name": "PropRiskLevelAggregated",
						"type": "nvarchar"
					},
					{
						"name": "PropRiskLevelDuringSignIn",
						"type": "nvarchar"
					},
					{
						"name": "PropRiskState",
						"type": "nvarchar"
					},
					{
						"name": "PropResourceDisplayName",
						"type": "nvarchar"
					},
					{
						"name": "PropAuthenticationRequirement",
						"type": "nvarchar"
					},
					{
						"name": "PropServicePrincipalId",
						"type": "nvarchar"
					},
					{
						"name": "PropAccountType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PropClientAppUsed",
						"type": "nvarchar"
					},
					{
						"name": "PropResourceId",
						"type": "nvarchar"
					},
					{
						"name": "PropAlternateSignInName",
						"type": "nvarchar"
					},
					{
						"name": "PropLocation",
						"type": "nvarchar"
					},
					{
						"name": "PipelineRunId",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "InsightsLogs",
					"table": "SignInLogs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXAI_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AppInsightsDirectory": {
						"type": "string",
						"defaultValue": "n21portalanalyticsdevappinsights_24217191a7f749f1bde7c270d326c8e5"
					},
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "PageViews"
					},
					"TelemetryDate": {
						"type": "string",
						"defaultValue": "0000-00-00"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "n21portalanalyticsblobstg"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat(dataset().AppInsightsDirectory, '/', dataset().AppInsightsTopic, '/', dataset().TelemetryDate)",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"view": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"count": {
										"type": "integer"
									},
									"durationMetric": {
										"type": "object",
										"properties": {
											"value": {
												"type": "number"
											},
											"count": {
												"type": "number"
											},
											"min": {
												"type": "number"
											},
											"max": {
												"type": "number"
											},
											"stdDev": {
												"type": "number"
											},
											"sampledValue": {
												"type": "number"
											}
										}
									},
									"url": {
										"type": "string"
									},
									"urlData": {
										"type": "object",
										"properties": {
											"base": {
												"type": "string"
											},
											"host": {
												"type": "string"
											},
											"hashTag": {
												"type": "string"
											},
											"protocol": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"internal": {
							"type": "object",
							"properties": {
								"data": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string"
										},
										"documentVersion": {
											"type": "string"
										}
									}
								}
							}
						},
						"context": {
							"type": "object",
							"properties": {
								"data": {
									"type": "object",
									"properties": {
										"eventTime": {
											"type": "string"
										},
										"isSynthetic": {
											"type": "boolean"
										},
										"samplingRate": {
											"type": "number"
										}
									}
								},
								"device": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										},
										"osVersion": {
											"type": "string"
										},
										"deviceName": {
											"type": "string"
										},
										"deviceModel": {
											"type": "string"
										},
										"browser": {
											"type": "string"
										},
										"browserVersion": {
											"type": "string"
										},
										"screenResolution": {
											"type": "object"
										}
									}
								},
								"user": {
									"type": "object",
									"properties": {
										"anonId": {
											"type": "string"
										},
										"authId": {
											"type": "string"
										},
										"isAuthenticated": {
											"type": "boolean"
										}
									}
								},
								"session": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string"
										},
										"isFirst": {
											"type": "boolean"
										}
									}
								},
								"operation": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string"
										},
										"parentId": {
											"type": "string"
										},
										"name": {
											"type": "string"
										}
									}
								},
								"location": {
									"type": "object",
									"properties": {
										"clientip": {
											"type": "string"
										},
										"continent": {
											"type": "string"
										},
										"country": {
											"type": "string"
										}
									}
								},
								"custom": {
									"type": "object",
									"properties": {
										"dimensions": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"PortalId": {
														"type": "string"
													},
													"PortalEnvironment": {
														"type": "string"
													},
													"PageId": {
														"type": "string"
													},
													"ContentGroupName": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXAI_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngestConfig_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Key",
						"type": "varchar"
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "LastModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LastModifiedBy",
						"type": "varchar"
					},
					{
						"name": "IsDeleted",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Configuration"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsMessagesTelemetryBlobJsonByDate_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXAI_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DateToLoad": {
						"type": "string",
						"defaultValue": "PreviousDate"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.blob",
						"folderPath": {
							"value": "@concat('exai_c332c05611a745beb25e7c088db74cfa/Messages/', dataset().DateToLoad)",
							"type": "Expression"
						},
						"container": "exsav2-ai-container"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"message": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"raw": {
										"type": "string"
									},
									"severityLevel": {
										"type": "string"
									}
								}
							}
						},
						"internal": {
							"type": "object",
							"properties": {
								"data": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string"
										},
										"documentVersion": {
											"type": "string"
										}
									}
								}
							}
						},
						"context": {
							"type": "object",
							"properties": {
								"application": {
									"type": "object",
									"properties": {
										"version": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "object",
									"properties": {
										"eventTime": {
											"type": "string"
										},
										"isSynthetic": {
											"type": "boolean"
										},
										"samplingRate": {
											"type": "number"
										}
									}
								},
								"cloud": {
									"type": "object"
								},
								"device": {
									"type": "object",
									"properties": {
										"type": {
											"type": "string"
										},
										"roleName": {
											"type": "string"
										},
										"roleInstance": {
											"type": "string"
										},
										"screenResolution": {
											"type": "object"
										}
									}
								},
								"session": {
									"type": "object",
									"properties": {
										"isFirst": {
											"type": "boolean"
										}
									}
								},
								"operation": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string"
										},
										"parentId": {
											"type": "string"
										},
										"name": {
											"type": "string"
										}
									}
								},
								"location": {
									"type": "object",
									"properties": {
										"clientip": {
											"type": "string"
										},
										"continent": {
											"type": "string"
										},
										"country": {
											"type": "string"
										}
									}
								},
								"custom": {
									"type": "object",
									"properties": {
										"dimensions": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"TraceId": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXAI_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsStagingEventTable_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "EventName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsUserRoles",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardType",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardTitle",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalyticsStaging",
					"table": "Event"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsStagingMetricsTable_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "varchar"
					},
					{
						"name": "ContextDataSyntheticSource",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceType",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SlotName",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SiteName",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalyticsStaging",
					"table": "Metrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsStagingPageViewPerformanceTable_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "varchar"
					},
					{
						"name": "clientPerformanceName",
						"type": "nvarchar"
					},
					{
						"name": "clientPerformanceClientProcessValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "clientPerformanceReceiveRequestValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "clientPerformanceSendRequestValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "clientPerformanceTotalValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "clientPerformanceUrl",
						"type": "nvarchar"
					},
					{
						"name": "clientPerformanceUrlDataBase",
						"type": "nvarchar"
					},
					{
						"name": "clientPerformanceUrlDataHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPageId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalyticsStaging",
					"table": "PageViewPerformance"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsStagingPageViewsTable_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "varchar"
					},
					{
						"name": "ViewName",
						"type": "nvarchar"
					},
					{
						"name": "ViewDurationMetricValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ViewUrl",
						"type": "nvarchar"
					},
					{
						"name": "ViewUrlDataBase",
						"type": "nvarchar"
					},
					{
						"name": "ViewUrlDataHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "CustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "CustomDimensionsEnvironment",
						"type": "varchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "IngestedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TelemetryDate",
						"type": "date"
					},
					{
						"name": "AppInsightsDirectoryId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AppInsightsTopicId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TelemetryId",
						"type": "uniqueidentifier"
					},
					{
						"name": "IsAlreadyExists",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalyticsStaging",
					"table": "PageViews"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryEventTable_DefaultEnv_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "EventName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsUserRoles",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardType",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardTitle",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Event"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryEventTable_OtherEnv1_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "EventName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsUserRoles",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardType",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardTitle",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Event"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryEventTable_OtherEnv2_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "EventName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsUserRoles",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardType",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardTitle",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Event"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryEventTable_OtherEnv3_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "EventName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsUserRoles",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardType",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardTitle",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Event"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryEventTable_OtherEnv4_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "EventName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsUserRoles",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardType",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsCardTitle",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Event"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryMessagesTable_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MessageRaw",
						"type": "nvarchar"
					},
					{
						"name": "MessageSeverityLevel",
						"type": "nvarchar"
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "InternalDataDocVer",
						"type": "nvarchar"
					},
					{
						"name": "ContextAppVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataEventTime",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataIsSynthetic",
						"type": "bit"
					},
					{
						"name": "ContextDataSamplingRate",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataDeviceType",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataDeviceRoleName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataDeviceRoleInstance",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextDataOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataOperationName",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationClientIp",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimTraceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimRequestId",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimActionId",
						"type": "uniqueidentifier"
					},
					{
						"name": "ContextCustomDimOriginalFormat",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimRequestPath",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimAspNetCoreEnvironment",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimEventId",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimMethod",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimScheme",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimPath",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimProtocol",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimQueryString",
						"type": "nvarchar"
					},
					{
						"name": "PipelineRunId",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Messages"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryMessagesTable_DS1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MessageRaw",
						"type": "nvarchar"
					},
					{
						"name": "MessageSeverityLevel",
						"type": "nvarchar"
					},
					{
						"name": "InternalDataDocVer",
						"type": "nvarchar"
					},
					{
						"name": "ContextAppVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataEventTime",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataIsSynthetic",
						"type": "bit"
					},
					{
						"name": "ContextDataSamplingRate",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataDeviceType",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataDeviceRoleName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataDeviceRoleInstance",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextDataOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDataOperationName",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationClientIp",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimTraceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimOriginalFormat",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimRequestPath",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimAspNetCoreEnvironment",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimEventId",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimMethod",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimScheme",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimPath",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimProtocol",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimQueryString",
						"type": "nvarchar"
					},
					{
						"name": "PipelineRunId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Messages"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryMetricsTable_DefaultEnv_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "ContextDataSyntheticSource",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceType",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SlotName",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SiteName",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Metrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryMetricsTable_OtherEnv1_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "ContextDataSyntheticSource",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceType",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SlotName",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SiteName",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Metrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryMetricsTable_OtherEnv2_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "ContextDataSyntheticSource",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceType",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SlotName",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SiteName",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Metrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryMetricsTable_OtherEnv3_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "ContextDataSyntheticSource",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceType",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SlotName",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SiteName",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Metrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryMetricsTable_OtherEnv4_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "ContextDataSyntheticSource",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceType",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SlotName",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsAppSrv_SiteName",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "Metrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryPageViewPerformanceTable_DefaultEnv_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "varchar"
					},
					{
						"name": "ClientPerformanceName",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceClientProcessValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceReceiveRequestValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceSendRequestValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceTotalValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceUrl",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceUrlDataBase",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceUrlDataHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPageId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "PageViewPerformance"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv1_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "varchar"
					},
					{
						"name": "ClientPerformanceName",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceClientProcessValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceReceiveRequestValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceSendRequestValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceTotalValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceUrl",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceUrlDataBase",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceUrlDataHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPageId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "PageViewPerformance"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv2_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "varchar"
					},
					{
						"name": "ClientPerformanceName",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceClientProcessValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceReceiveRequestValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceSendRequestValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceTotalValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceUrl",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceUrlDataBase",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceUrlDataHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPageId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "PageViewPerformance"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv3_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "varchar"
					},
					{
						"name": "ClientPerformanceName",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceClientProcessValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceReceiveRequestValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceSendRequestValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceTotalValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClientPerformanceUrl",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceUrlDataBase",
						"type": "nvarchar"
					},
					{
						"name": "ClientPerformanceUrlDataHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPageId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "PageViewPerformance"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryPageViewsTable_DefaultEnv_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "eventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id",
						"type": "uniqueidentifier"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "durationMetricValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "url",
						"type": "nvarchar"
					},
					{
						"name": "urlBase",
						"type": "nvarchar"
					},
					{
						"name": "urlHost",
						"type": "nvarchar"
					},
					{
						"name": "deviceId",
						"type": "nvarchar"
					},
					{
						"name": "deviceName",
						"type": "nvarchar"
					},
					{
						"name": "osVersion",
						"type": "nvarchar"
					},
					{
						"name": "browser",
						"type": "nvarchar"
					},
					{
						"name": "browserVersion",
						"type": "nvarchar"
					},
					{
						"name": "accountId",
						"type": "nvarchar"
					},
					{
						"name": "anonId",
						"type": "nvarchar"
					},
					{
						"name": "sessionId",
						"type": "nvarchar"
					},
					{
						"name": "isFirst",
						"type": "bit"
					},
					{
						"name": "operationId",
						"type": "nvarchar"
					},
					{
						"name": "operationParentId",
						"type": "nvarchar"
					},
					{
						"name": "continent",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "province",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "PageViews"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryPageViewsTable_OtherEnv1_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "ViewName",
						"type": "nvarchar"
					},
					{
						"name": "ViewDurationMetricValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ViewUrl",
						"type": "nvarchar"
					},
					{
						"name": "ViewUrlDataBase",
						"type": "nvarchar"
					},
					{
						"name": "ViewUrlDataHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "CustomDimensionsPortalId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomDimensionsEnvironment",
						"type": "varchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "PageViews"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryPageViewsTable_OtherEnv2_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "ViewName",
						"type": "nvarchar"
					},
					{
						"name": "ViewDurationMetricValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ViewUrl",
						"type": "nvarchar"
					},
					{
						"name": "ViewUrlDataBase",
						"type": "nvarchar"
					},
					{
						"name": "ViewUrlDataHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "CustomDimensionsPortalId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomDimensionsEnvironment",
						"type": "varchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "PageViews"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryPageViewsTable_OtherEnv3_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "ViewName",
						"type": "nvarchar"
					},
					{
						"name": "ViewDurationMetricValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ViewUrl",
						"type": "nvarchar"
					},
					{
						"name": "ViewUrlDataBase",
						"type": "nvarchar"
					},
					{
						"name": "ViewUrlDataHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "CustomDimensionsPortalId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomDimensionsEnvironment",
						"type": "varchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "PageViews"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsTelemetryPageViewsTable_OtherEnv4_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EXSQL_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContextDataEventTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InternalDataId",
						"type": "uniqueidentifier"
					},
					{
						"name": "ViewName",
						"type": "nvarchar"
					},
					{
						"name": "ViewDurationMetricValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ViewUrl",
						"type": "nvarchar"
					},
					{
						"name": "ViewUrlDataBase",
						"type": "nvarchar"
					},
					{
						"name": "ViewUrlDataHost",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceId",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceName",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceOSVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowser",
						"type": "nvarchar"
					},
					{
						"name": "ContextDeviceBrowserVersion",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAuthId",
						"type": "nvarchar"
					},
					{
						"name": "ContextUserAnonId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionId",
						"type": "nvarchar"
					},
					{
						"name": "ContextSessionIsFirst",
						"type": "bit"
					},
					{
						"name": "ContextOperationId",
						"type": "nvarchar"
					},
					{
						"name": "ContextOperationParentId",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationContinent",
						"type": "nvarchar"
					},
					{
						"name": "ContextLocationCountry",
						"type": "nvarchar"
					},
					{
						"name": "ContextCustomDimensionsPortalId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPortalEnvironment",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsPageId",
						"type": "varchar"
					},
					{
						"name": "ContextCustomDimensionsContentGroupName",
						"type": "varchar"
					},
					{
						"name": "TelemetryIngestBatchId",
						"type": "uniqueidentifier"
					},
					{
						"name": "TelemetryDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "UsageAnalytics",
					"table": "PageViews"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EXSQL_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXAI_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('EXAI_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXSQL_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('EXSQL_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyBackup_TRIGGER')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "UsageAnalyticsIngest",
							"type": "PipelineReference"
						},
						"parameters": {
							"TelemetryDateFolder": "[parameters('DailyBackup_TRIGGER_properties_UsageAnalyticsIngest_parameters_TelemetryDateFolder')]",
							"RunBy": "[parameters('DailyBackup_TRIGGER_properties_UsageAnalyticsIngest_parameters_RunBy')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "InsightsLogs_AuditLogs",
							"type": "PipelineReference"
						},
						"parameters": {
							"DateToLoad": "[parameters('DailyBackup_TRIGGER_properties_InsightsLogs_AuditLogs_parameters_DateToLoad')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "InsightsLogs_SignInLogs",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "UsageAnalyticsIngest_Messages",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-06-09T01:00:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsIngest')]",
				"[concat(variables('factoryId'), '/pipelines/InsightsLogs_AuditLogs')]",
				"[concat(variables('factoryId'), '/pipelines/InsightsLogs_SignInLogs')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsIngest_Messages')]"
			]
		}
	]
}