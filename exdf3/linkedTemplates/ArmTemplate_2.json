{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "exdf3"
		},
		"DailyBackup_TRIGGER_properties_UsageAnalyticsIngest_parameters_TelemetryDateFolder": {
			"type": "string",
			"defaultValue": "PreviousDate"
		},
		"DailyBackup_TRIGGER_properties_UsageAnalyticsIngest_parameters_RunBy": {
			"type": "string",
			"defaultValue": "System"
		},
		"DailyBackup_TRIGGER_properties_InsightsLogs_AuditLogs_parameters_DateToLoad": {
			"type": "string",
			"defaultValue": "PreviousDate"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngest_Metrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Stage Telemetry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear Staged Telemetry for Same Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "TelemetryIngestBatchId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "TelemetryDate",
										"value": {
											"value": "@variables('TelemetryDateFolder')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.blob",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"value": "@pipeline().parameters.StagingColumnsMapping",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS",
								"type": "DatasetReference",
								"parameters": {
									"AppInsightsDirectory": {
										"value": "@pipeline().parameters.AppInsightsDirectory",
										"type": "Expression"
									},
									"AppInsightsTopic": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"TelemetryDate": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"ContainerName": {
										"value": "@pipeline().parameters.ContainerName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Purge Staged Telemetry",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Distribute to Portal Other Environment1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Distribute to Portal Other Environment1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment1))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment1",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryMetricsTable_OtherEnv1_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment2))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment2",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryMetricsTable_OtherEnv2_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Environment",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "true",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": {
														"value": "@pipeline().parameters.IncludeNullEnvironment",
														"type": "Expression"
													}
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.DefaultEnvironment",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryMetricsTable_DefaultEnv_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment3",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment3))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 3",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment3",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryMetricsTable_OtherEnv3_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Default If Telemetry Date Param Blank",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.TelemetryDateFolder),equals(pipeline().parameters.TelemetryDateFolder,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Telemetry Date Folder to Param Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@pipeline().parameters.TelemetryDateFolder",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Telemetry Date Folder to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment4",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment4))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 4",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment4",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingMetricsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryMetricsTable_OtherEnv4_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Clear Staged Telemetry for Same Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"AppInsightsDirectory": {
						"type": "string",
						"defaultValue": "n21portalanalyticsdevappinsights_24217191a7f749f1bde7c270d326c8e5"
					},
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "Metrics"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"StagingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"path": "$['view'][0]['name']"
									},
									"sink": {
										"name": "ViewName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['durationMetric']['value']"
									},
									"sink": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['url']"
									},
									"sink": {
										"name": "ViewUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['urlData']['base']"
									},
									"sink": {
										"name": "ViewUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['urlData']['host']"
									},
									"sink": {
										"name": "ViewUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['internal']['data']['id']"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['data']['eventTime']"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['id']"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['osVersion']"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['deviceName']"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browser']"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browserVersion']"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['anonId']"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['authId']"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['id']"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['isFirst']"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['id']"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['parentId']"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['continent']"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['country']"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][0]['PortalId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][1]['PortalEnvironment']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][2]['PageId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][3]['ContentGroupName']"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['TelemetryIngestBatchId']"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"path": "$['TelemetryDate']"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							],
							"collectionReference": ""
						}
					},
					"LandingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"name": "InternalDataId",
										"type": "String"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "ViewName",
										"type": "String"
									},
									"sink": {
										"name": "ViewName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									},
									"sink": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ViewUrl",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewUrlDataBase",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewUrlDataHost",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceId",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceName",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAuthId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAnonId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionId",
										"type": "String"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"name": "ContextOperationId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextOperationParentId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationContinent",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationCountry",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "TelemetryDate",
										"type": "String"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							]
						}
					},
					"IncludeNullEnvironment": {
						"type": "string",
						"defaultValue": "true"
					},
					"DefaultEnvironment": {
						"type": "string",
						"defaultValue": "dev"
					},
					"ToOtherEnvironment1": {
						"type": "string",
						"defaultValue": "devint"
					},
					"ToOtherEnvironment2": {
						"type": "string",
						"defaultValue": "int"
					},
					"ToOtherEnvironment3": {
						"type": "string",
						"defaultValue": "qa"
					},
					"RunBy": {
						"type": "string"
					},
					"ToOtherEnvironment4": {
						"type": "string",
						"defaultValue": "stresstest"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "string"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "n21portalanalyticsblobstg"
					}
				},
				"variables": {
					"TelemetryDateFolder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngest_PageViewPerformance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Stage Telemetry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear Staged Telemetry for Same Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "TelemetryIngestBatchId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "TelemetryDate",
										"value": {
											"value": "@variables('TelemetryDateFolder')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.blob",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"value": "@pipeline().parameters.StagingColumnsMapping",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS",
								"type": "DatasetReference",
								"parameters": {
									"AppInsightsDirectory": {
										"value": "@pipeline().parameters.AppInsightsDirectory",
										"type": "Expression"
									},
									"AppInsightsTopic": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"TelemetryDate": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"ContainerName": {
										"value": "@pipeline().parameters.ContainerName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Purge Staged Telemetry",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Distribute to Portal Other Environment1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Distribute to Portal Other Environment1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment1))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment1",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv1_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment2))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment2",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv2_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Environment",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "true",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": {
														"value": "@pipeline().parameters.IncludeNullEnvironment",
														"type": "Expression"
													}
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.DefaultEnvironment",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewPerformanceTable_DefaultEnv_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment3",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment3))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 3",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment3",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv3_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Default If Telemetry Date Param Blank",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.TelemetryDateFolder),equals(pipeline().parameters.TelemetryDateFolder,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Telemetry Date Folder to Param Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@pipeline().parameters.TelemetryDateFolder",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Telemetry Date Folder to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment4",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment4))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 4",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment4",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewPerformanceTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewPerformanceTable_OtherEnv3_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Clear Staged Telemetry for Same Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"AppInsightsDirectory": {
						"type": "string",
						"defaultValue": "n21portalanalyticsdevappinsights_24217191a7f749f1bde7c270d326c8e5"
					},
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "PageViewPerformance"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"StagingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"path": "$['clientPerformance'][0]['name']"
									},
									"sink": {
										"name": "ClientPerformanceName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['clientProcess']['value']"
									},
									"sink": {
										"name": "ClientPerformanceClientProcessValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['receiveRequest']['value']"
									},
									"sink": {
										"name": "ClientPerformanceReceiveRequestValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['sendRequest']['value']"
									},
									"sink": {
										"name": "ClientPerformanceSendRequestValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['total']['value']"
									},
									"sink": {
										"name": "ClientPerformanceTotalValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['url']"
									},
									"sink": {
										"name": "ClientPerformanceUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['urlData']['base']"
									},
									"sink": {
										"name": "ClientPerformanceUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['clientPerformance'][0]['urlData']['host']"
									},
									"sink": {
										"name": "ClientPerformanceUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['internal']['data']['id']"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['data']['eventTime']"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['id']"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['osVersion']"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['deviceName']"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browser']"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browserVersion']"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['anonId']"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['authId']"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['id']"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['isFirst']"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['id']"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['parentId']"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['continent']"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['country']"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][0]['PortalId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][1]['PortalEnvironment']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][2]['PageId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][3]['ContentGroupName']"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['TelemetryIngestBatchId']"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"path": "$['TelemetryDate']"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							],
							"collectionReference": ""
						}
					},
					"LandingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"name": "InternalDataId",
										"type": "String"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceName",
										"type": "String"
									},
									"sink": {
										"name": "ClientPerformanceName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceClientProcessValue",
										"type": "Double"
									},
									"sink": {
										"name": "ClientPerformanceClientProcessValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceReceiveRequestValue",
										"type": "Double"
									},
									"sink": {
										"name": "ClientPerformanceReceiveRequestValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceSendRequestValue",
										"type": "Double"
									},
									"sink": {
										"name": "ClientPerformanceSendRequestValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceTotalValue",
										"type": "Double"
									},
									"sink": {
										"name": "ClientPerformanceTotalValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceUrl",
										"type": "String"
									},
									"sink": {
										"name": "ClientPerformanceUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceUrlDataBase",
										"type": "String"
									},
									"sink": {
										"name": "ClientPerformanceUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ClientPerformanceUrlDataHost",
										"type": "String"
									},
									"sink": {
										"name": "ClientPerformanceUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceId",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceName",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAuthId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAnonId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionId",
										"type": "String"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"name": "ContextOperationId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextOperationParentId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationContinent",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationCountry",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "TelemetryDate",
										"type": "String"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							]
						}
					},
					"IncludeNullEnvironment": {
						"type": "string",
						"defaultValue": "true"
					},
					"DefaultEnvironment": {
						"type": "string",
						"defaultValue": "dev"
					},
					"ToOtherEnvironment1": {
						"type": "string",
						"defaultValue": "devint"
					},
					"ToOtherEnvironment2": {
						"type": "string",
						"defaultValue": "int"
					},
					"ToOtherEnvironment3": {
						"type": "string",
						"defaultValue": "qa"
					},
					"RunBy": {
						"type": "string"
					},
					"ToOtherEnvironment4": {
						"type": "string",
						"defaultValue": "stresstest"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "string"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "n21portalanalyticsblobstg"
					}
				},
				"variables": {
					"TelemetryDateFolder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngest_PageViews')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETL Stage Telemetry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear Staged Telemetry for Same Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "TelemetryIngestBatchId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "TelemetryDate",
										"value": {
											"value": "@variables('TelemetryDateFolder')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.blob",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"value": "@pipeline().parameters.StagingColumnsMapping",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "UsageAnalyticsAppInsightsBlobJsonByDate_MSI_DS",
								"type": "DatasetReference",
								"parameters": {
									"AppInsightsDirectory": {
										"value": "@pipeline().parameters.AppInsightsDirectory",
										"type": "Expression"
									},
									"AppInsightsTopic": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"TelemetryDate": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"ContainerName": {
										"value": "@pipeline().parameters.ContainerName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Purge Staged Telemetry",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Distribute to Portal Other Environment1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Distribute to Portal Other Environment4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Distribute to Portal Other Environment1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment1))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment1",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewsTable_OtherEnv1_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment2))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment2",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewsTable_OtherEnv2_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 2",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Environment",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "true",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": {
														"value": "@pipeline().parameters.IncludeNullEnvironment",
														"type": "Expression"
													}
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.DefaultEnvironment",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewsTable_DefaultEnv_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment3",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment3))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 3",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment3",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewsTable_OtherEnv3_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 3",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Default If Telemetry Date Param Blank",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.TelemetryDateFolder),equals(pipeline().parameters.TelemetryDateFolder,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Telemetry Date Folder to Param Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@pipeline().parameters.TelemetryDateFolder",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Telemetry Date Folder to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Distribute to Portal Other Environment4",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ETL Stage Telemetry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ToOtherEnvironment4))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Backup-Delete Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspBackupAndDeleteTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert New Telemetry For Environment 4",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Backup-Delete Telemetry Same Date 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetStagingTelemetryPerEnvironment]",
											"storedProcedureParameters": {
												"AppInsightsTopic": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.AppInsightsTopic",
														"type": "Expression"
													}
												},
												"ContextCustomDimensionsEnvironmentColumnName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ContextCustomDimensionsEnvironmentColumnName",
														"type": "Expression"
													}
												},
												"IncludeNullEnvironment": {
													"type": "Boolean",
													"value": "false"
												},
												"TelemetryDate": {
													"type": "String",
													"value": {
														"value": "@variables('TelemetryDateFolder')",
														"type": "Expression"
													}
												},
												"ToEnvironment": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.ToOtherEnvironment4",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"value": "@pipeline().parameters.LandingColumnsMapping",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "UsageAnalyticsStagingPageViewsTable_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UsageAnalyticsTelemetryPageViewsTable_OtherEnv4_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Purge Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Restore Backup Telemetry Same Date 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert New Telemetry For Environment 4",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[UsageAnalyticsStaging].[uspRestoreBackupTelemetry]",
										"storedProcedureParameters": {
											"AppInsightsTopic": {
												"value": {
													"value": "@pipeline().parameters.AppInsightsTopic",
													"type": "Expression"
												},
												"type": "String"
											},
											"TelemetryDate": {
												"value": {
													"value": "@variables('TelemetryDateFolder')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "EXSQL_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Clear Staged Telemetry for Same Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[UsageAnalyticsStaging].[uspDeleteStagingTelemetry]",
							"storedProcedureParameters": {
								"AppInsightsTopic": {
									"value": {
										"value": "@pipeline().parameters.AppInsightsTopic",
										"type": "Expression"
									},
									"type": "String"
								},
								"TelemetryDate": {
									"value": {
										"value": "@variables('TelemetryDateFolder')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "EXSQL_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"AppInsightsDirectory": {
						"type": "string",
						"defaultValue": "n21portalanalyticsdevappinsights_24217191a7f749f1bde7c270d326c8e5"
					},
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "PageViews"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"StagingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"path": "$['view'][0]['name']"
									},
									"sink": {
										"name": "ViewName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['durationMetric']['value']"
									},
									"sink": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['url']"
									},
									"sink": {
										"name": "ViewUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['urlData']['base']"
									},
									"sink": {
										"name": "ViewUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['view'][0]['urlData']['host']"
									},
									"sink": {
										"name": "ViewUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['internal']['data']['id']"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['data']['eventTime']"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['id']"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['osVersion']"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['deviceName']"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browser']"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['device']['browserVersion']"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['anonId']"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['user']['authId']"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['id']"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['session']['isFirst']"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['id']"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['operation']['parentId']"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['continent']"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['location']['country']"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][0]['PortalId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][1]['PortalEnvironment']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][2]['PageId']"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['context']['custom']['dimensions'][3]['ContentGroupName']"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"path": "$['TelemetryIngestBatchId']"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"path": "$['TelemetryDate']"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							],
							"collectionReference": ""
						}
					},
					"LandingColumnsMapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									},
									"sink": {
										"name": "ContextDataEventTime",
										"type": "DateTime"
									}
								},
								{
									"source": {
										"name": "InternalDataId",
										"type": "String"
									},
									"sink": {
										"name": "InternalDataId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "ViewName",
										"type": "String"
									},
									"sink": {
										"name": "ViewName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									},
									"sink": {
										"name": "ViewDurationMetricValue",
										"type": "Double"
									}
								},
								{
									"source": {
										"name": "ViewUrl",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrl",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewUrlDataBase",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrlDataBase",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ViewUrlDataHost",
										"type": "String"
									},
									"sink": {
										"name": "ViewUrlDataHost",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceId",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceName",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceOSVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowser",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									},
									"sink": {
										"name": "ContextDeviceBrowserVersion",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAuthId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAuthId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextUserAnonId",
										"type": "String"
									},
									"sink": {
										"name": "ContextUserAnonId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionId",
										"type": "String"
									},
									"sink": {
										"name": "ContextSessionId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									},
									"sink": {
										"name": "ContextSessionIsFirst",
										"type": "Boolean"
									}
								},
								{
									"source": {
										"name": "ContextOperationId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextOperationParentId",
										"type": "String"
									},
									"sink": {
										"name": "ContextOperationParentId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationContinent",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationContinent",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextLocationCountry",
										"type": "String"
									},
									"sink": {
										"name": "ContextLocationCountry",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPortalEnvironment",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsPageId",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									},
									"sink": {
										"name": "ContextCustomDimensionsContentGroupName",
										"type": "String"
									}
								},
								{
									"source": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									},
									"sink": {
										"name": "TelemetryIngestBatchId",
										"type": "Guid"
									}
								},
								{
									"source": {
										"name": "TelemetryDate",
										"type": "String"
									},
									"sink": {
										"name": "TelemetryDate",
										"type": "String"
									}
								}
							]
						}
					},
					"IncludeNullEnvironment": {
						"type": "string",
						"defaultValue": "true"
					},
					"DefaultEnvironment": {
						"type": "string",
						"defaultValue": "dev"
					},
					"ToOtherEnvironment1": {
						"type": "string",
						"defaultValue": "devint"
					},
					"ToOtherEnvironment2": {
						"type": "string",
						"defaultValue": "int"
					},
					"ToOtherEnvironment3": {
						"type": "string",
						"defaultValue": "qa"
					},
					"RunBy": {
						"type": "string"
					},
					"ToOtherEnvironment4": {
						"type": "string",
						"defaultValue": "stresstest"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "string"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "n21portalanalyticsblobstg"
					}
				},
				"variables": {
					"TelemetryDateFolder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsGetConfig_Event')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Staging Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StagingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.StagingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LandingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.LandingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Include Null Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IncludeNullEnvironment",
							"value": {
								"value": "@bool(activity('Get Configuration').output.firstRow.IncludeNullEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Default Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DefaultEnvironment",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.DefaultEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment1",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment2",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment3",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetConfiguration]",
								"storedProcedureParameters": {
									"ConfigurationGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.AppInsightsTopic",
											"type": "Expression"
										}
									},
									"ConfigurationKey": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "UsageAnalyticsIngestConfig_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set App Insights Directory",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AppInsightsDirectory",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.AppInsightsDirectory)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment4",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Ingest Enabled",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IngestEnabled",
							"value": {
								"value": "@bool(string(activity('Get Configuration').output.firstRow.IngestEnabled))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Ingest Enabled",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Ingest Enabled",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set App Insights Directory",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Default Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Include Null Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Landing Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Staging Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Environment Column Name",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('IngestEnabled')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Telemetry",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UsageAnalyticsIngest_Event",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"AppInsightsDirectory": {
												"value": "@variables('AppInsightsDirectory')",
												"type": "Expression"
											},
											"AppInsightsTopic": {
												"value": "@pipeline().parameters.AppInsightsTopic",
												"type": "Expression"
											},
											"TelemetryDateFolder": {
												"value": "@pipeline().parameters.TelemetryDateFolder",
												"type": "Expression"
											},
											"StagingColumnsMapping": {
												"value": "@json(variables('StagingColumnsMapping'))",
												"type": "Expression"
											},
											"LandingColumnsMapping": {
												"value": "@json(variables('LandingColumnsMapping'))",
												"type": "Expression"
											},
											"IncludeNullEnvironment": {
												"value": "@variables('IncludeNullEnvironment')",
												"type": "Expression"
											},
											"DefaultEnvironment": {
												"value": "@variables('DefaultEnvironment')",
												"type": "Expression"
											},
											"ToOtherEnvironment1": {
												"value": "@variables('ToOtherEnvironment1')",
												"type": "Expression"
											},
											"ToOtherEnvironment2": {
												"value": "@variables('ToOtherEnvironment2')",
												"type": "Expression"
											},
											"ToOtherEnvironment3": {
												"value": "@variables('ToOtherEnvironment3')",
												"type": "Expression"
											},
											"RunBy": {
												"value": "@pipeline().parameters.RunBy",
												"type": "Expression"
											},
											"ToOtherEnvironment4": {
												"value": "@variables('ToOtherEnvironment4')",
												"type": "Expression"
											},
											"ContextCustomDimensionsEnvironmentColumnName": {
												"value": "@variables('ContextCustomDimensionsEnvironmentColumnName')",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@variables('ContainerName')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Environment Column Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContextCustomDimensionsEnvironmentColumnName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContextCustomDimensionsEnvironmentColumnName)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContainerName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContainerName)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "Event"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"RunBy": {
						"type": "string"
					}
				},
				"variables": {
					"StagingColumnsMapping": {
						"type": "String"
					},
					"LandingColumnsMapping": {
						"type": "String"
					},
					"IncludeNullEnvironment": {
						"type": "Boolean"
					},
					"DefaultEnvironment": {
						"type": "String"
					},
					"ToOtherEnvironment1": {
						"type": "String"
					},
					"ToOtherEnvironment2": {
						"type": "String"
					},
					"ToOtherEnvironment3": {
						"type": "String"
					},
					"ToOtherEnvironment4": {
						"type": "String"
					},
					"AppInsightsDirectory": {
						"type": "String"
					},
					"IngestEnabled": {
						"type": "Boolean"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "String"
					},
					"ContainerName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsGetConfig_Metrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Staging Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StagingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.StagingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LandingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.LandingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Include Null Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IncludeNullEnvironment",
							"value": {
								"value": "@bool(activity('Get Configuration').output.firstRow.IncludeNullEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Default Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DefaultEnvironment",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.DefaultEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment1",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment2",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment3",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetConfiguration]",
								"storedProcedureParameters": {
									"ConfigurationGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.AppInsightsTopic",
											"type": "Expression"
										}
									},
									"ConfigurationKey": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "UsageAnalyticsIngestConfig_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set App Insights Directory",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AppInsightsDirectory",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.AppInsightsDirectory)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment4",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Ingest Enabled",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IngestEnabled",
							"value": {
								"value": "@bool(string(activity('Get Configuration').output.firstRow.IngestEnabled))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Ingest Enabled",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Ingest Enabled",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set App Insights Directory",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Default Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Include Null Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Landing Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Staging Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Environment Column Name",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('IngestEnabled')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Telemetry",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UsageAnalyticsIngest_Metrics",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"AppInsightsDirectory": {
												"value": "@variables('AppInsightsDirectory')",
												"type": "Expression"
											},
											"AppInsightsTopic": {
												"value": "@pipeline().parameters.AppInsightsTopic",
												"type": "Expression"
											},
											"TelemetryDateFolder": {
												"value": "@pipeline().parameters.TelemetryDateFolder",
												"type": "Expression"
											},
											"StagingColumnsMapping": {
												"value": "@json(variables('StagingColumnsMapping'))",
												"type": "Expression"
											},
											"LandingColumnsMapping": {
												"value": "@json(variables('LandingColumnsMapping'))",
												"type": "Expression"
											},
											"IncludeNullEnvironment": {
												"value": "@variables('IncludeNullEnvironment')",
												"type": "Expression"
											},
											"DefaultEnvironment": {
												"value": "@variables('DefaultEnvironment')",
												"type": "Expression"
											},
											"ToOtherEnvironment1": {
												"value": "@variables('ToOtherEnvironment1')",
												"type": "Expression"
											},
											"ToOtherEnvironment2": {
												"value": "@variables('ToOtherEnvironment2')",
												"type": "Expression"
											},
											"ToOtherEnvironment3": {
												"value": "@variables('ToOtherEnvironment3')",
												"type": "Expression"
											},
											"RunBy": {
												"value": "@pipeline().parameters.RunBy",
												"type": "Expression"
											},
											"ToOtherEnvironment4": {
												"value": "@variables('ToOtherEnvironment4')",
												"type": "Expression"
											},
											"ContextCustomDimensionsEnvironmentColumnName": {
												"value": "@variables('ContextCustomDimensionsEnvironmentColumnName')",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@variables('ContainerName')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Environment Column Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContextCustomDimensionsEnvironmentColumnName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContextCustomDimensionsEnvironmentColumnName)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContainerName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContainerName)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "Event"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"RunBy": {
						"type": "string"
					}
				},
				"variables": {
					"StagingColumnsMapping": {
						"type": "String"
					},
					"LandingColumnsMapping": {
						"type": "String"
					},
					"IncludeNullEnvironment": {
						"type": "Boolean"
					},
					"DefaultEnvironment": {
						"type": "String"
					},
					"ToOtherEnvironment1": {
						"type": "String"
					},
					"ToOtherEnvironment2": {
						"type": "String"
					},
					"ToOtherEnvironment3": {
						"type": "String"
					},
					"ToOtherEnvironment4": {
						"type": "String"
					},
					"AppInsightsDirectory": {
						"type": "String"
					},
					"IngestEnabled": {
						"type": "Boolean"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "String"
					},
					"ContainerName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsIngest_Metrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsGetConfig_PageViewPerformance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Staging Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StagingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.StagingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LandingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.LandingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Include Null Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IncludeNullEnvironment",
							"value": {
								"value": "@bool(activity('Get Configuration').output.firstRow.IncludeNullEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Default Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DefaultEnvironment",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.DefaultEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment1",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment2",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment3",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetConfiguration]",
								"storedProcedureParameters": {
									"ConfigurationGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.AppInsightsTopic",
											"type": "Expression"
										}
									},
									"ConfigurationKey": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "UsageAnalyticsIngestConfig_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set App Insights Directory",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AppInsightsDirectory",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.AppInsightsDirectory)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment4",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Ingest Enabled",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IngestEnabled",
							"value": {
								"value": "@bool(string(activity('Get Configuration').output.firstRow.IngestEnabled))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Ingest Enabled",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Ingest Enabled",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set App Insights Directory",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Default Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Include Null Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Landing Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Staging Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Environment Column Name",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('IngestEnabled')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Telemetry",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UsageAnalyticsIngest_PageViewPerformance",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"AppInsightsDirectory": {
												"value": "@variables('AppInsightsDirectory')",
												"type": "Expression"
											},
											"AppInsightsTopic": {
												"value": "@pipeline().parameters.AppInsightsTopic",
												"type": "Expression"
											},
											"TelemetryDateFolder": {
												"value": "@pipeline().parameters.TelemetryDateFolder",
												"type": "Expression"
											},
											"StagingColumnsMapping": {
												"value": "@json(variables('StagingColumnsMapping'))",
												"type": "Expression"
											},
											"LandingColumnsMapping": {
												"value": "@json(variables('LandingColumnsMapping'))",
												"type": "Expression"
											},
											"IncludeNullEnvironment": {
												"value": "@variables('IncludeNullEnvironment')",
												"type": "Expression"
											},
											"DefaultEnvironment": {
												"value": "@variables('DefaultEnvironment')",
												"type": "Expression"
											},
											"ToOtherEnvironment1": {
												"value": "@variables('ToOtherEnvironment1')",
												"type": "Expression"
											},
											"ToOtherEnvironment2": {
												"value": "@variables('ToOtherEnvironment2')",
												"type": "Expression"
											},
											"ToOtherEnvironment3": {
												"value": "@variables('ToOtherEnvironment3')",
												"type": "Expression"
											},
											"RunBy": {
												"value": "@pipeline().parameters.RunBy",
												"type": "Expression"
											},
											"ToOtherEnvironment4": {
												"value": "@variables('ToOtherEnvironment4')",
												"type": "Expression"
											},
											"ContextCustomDimensionsEnvironmentColumnName": {
												"value": "@variables('ContextCustomDimensionsEnvironmentColumnName')",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@variables('ContainerName')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Environment Column Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContextCustomDimensionsEnvironmentColumnName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContextCustomDimensionsEnvironmentColumnName)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContainerName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContainerName)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "PageViews"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"RunBy": {
						"type": "string"
					}
				},
				"variables": {
					"StagingColumnsMapping": {
						"type": "String"
					},
					"LandingColumnsMapping": {
						"type": "String"
					},
					"IncludeNullEnvironment": {
						"type": "Boolean"
					},
					"DefaultEnvironment": {
						"type": "String"
					},
					"ToOtherEnvironment1": {
						"type": "String"
					},
					"ToOtherEnvironment2": {
						"type": "String"
					},
					"ToOtherEnvironment3": {
						"type": "String"
					},
					"ToOtherEnvironment4": {
						"type": "String"
					},
					"AppInsightsDirectory": {
						"type": "String"
					},
					"IngestEnabled": {
						"type": "Boolean"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "String"
					},
					"ContainerName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsIngest_PageViewPerformance')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsGetConfig_PageViews')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Staging Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StagingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.StagingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Columns Mapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LandingColumnsMapping",
							"value": {
								"value": "@activity('Get Configuration').output.firstRow.LandingColumnsMapping",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Include Null Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IncludeNullEnvironment",
							"value": {
								"value": "@bool(activity('Get Configuration').output.firstRow.IncludeNullEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Default Environment",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DefaultEnvironment",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.DefaultEnvironment)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment1",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment2",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment3",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[UsageAnalyticsStaging].[uspGetConfiguration]",
								"storedProcedureParameters": {
									"ConfigurationGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.AppInsightsTopic",
											"type": "Expression"
										}
									},
									"ConfigurationKey": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "UsageAnalyticsIngestConfig_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set App Insights Directory",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AppInsightsDirectory",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.AppInsightsDirectory)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set To Other Environment 4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ToOtherEnvironment4",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ToOtherEnvironment4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Ingest Enabled",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Ingest Enabled",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set App Insights Directory",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set To Other Environment 1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Default Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Include Null Environment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Landing Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Staging Columns Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Environment Column Name",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('IngestEnabled')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Telemetry",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UsageAnalyticsIngest_PageViews",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"AppInsightsDirectory": {
												"value": "@variables('AppInsightsDirectory')",
												"type": "Expression"
											},
											"AppInsightsTopic": {
												"value": "@pipeline().parameters.AppInsightsTopic",
												"type": "Expression"
											},
											"TelemetryDateFolder": {
												"value": "@pipeline().parameters.TelemetryDateFolder",
												"type": "Expression"
											},
											"StagingColumnsMapping": {
												"value": "@json(variables('StagingColumnsMapping'))",
												"type": "Expression"
											},
											"LandingColumnsMapping": {
												"value": "@json(variables('LandingColumnsMapping'))",
												"type": "Expression"
											},
											"IncludeNullEnvironment": {
												"value": "@variables('IncludeNullEnvironment')",
												"type": "Expression"
											},
											"DefaultEnvironment": {
												"value": "@variables('DefaultEnvironment')",
												"type": "Expression"
											},
											"ToOtherEnvironment1": {
												"value": "@variables('ToOtherEnvironment1')",
												"type": "Expression"
											},
											"ToOtherEnvironment2": {
												"value": "@variables('ToOtherEnvironment2')",
												"type": "Expression"
											},
											"ToOtherEnvironment3": {
												"value": "@variables('ToOtherEnvironment3')",
												"type": "Expression"
											},
											"RunBy": {
												"value": "@pipeline().parameters.RunBy",
												"type": "Expression"
											},
											"ToOtherEnvironment4": {
												"value": "@variables('ToOtherEnvironment4')",
												"type": "Expression"
											},
											"ContextCustomDimensionsEnvironmentColumnName": {
												"value": "@variables('ContextCustomDimensionsEnvironmentColumnName')",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@variables('ContainerName')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Ingest Enabled",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IngestEnabled",
							"value": {
								"value": "@bool(string(activity('Get Configuration').output.firstRow.IngestEnabled))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Environment Column Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContextCustomDimensionsEnvironmentColumnName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContextCustomDimensionsEnvironmentColumnName)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ContainerName",
							"value": {
								"value": "@string(activity('Get Configuration').output.firstRow.ContainerName)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"AppInsightsTopic": {
						"type": "string",
						"defaultValue": "PageViews"
					},
					"TelemetryDateFolder": {
						"type": "string"
					},
					"RunBy": {
						"type": "string"
					}
				},
				"variables": {
					"StagingColumnsMapping": {
						"type": "String"
					},
					"LandingColumnsMapping": {
						"type": "String"
					},
					"IncludeNullEnvironment": {
						"type": "Boolean"
					},
					"DefaultEnvironment": {
						"type": "String"
					},
					"ToOtherEnvironment1": {
						"type": "String"
					},
					"ToOtherEnvironment2": {
						"type": "String"
					},
					"ToOtherEnvironment3": {
						"type": "String"
					},
					"ToOtherEnvironment4": {
						"type": "String"
					},
					"AppInsightsDirectory": {
						"type": "String"
					},
					"IngestEnabled": {
						"type": "Boolean"
					},
					"ContextCustomDimensionsEnvironmentColumnName": {
						"type": "String"
					},
					"ContainerName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsIngest_PageViews')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UsageAnalyticsIngest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Default If Telemetry Date Param Blank",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(empty(pipeline().parameters.TelemetryDateFolder),equals(pipeline().parameters.TelemetryDateFolder,'PreviousDate'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Telemetry Date Folder to Param Value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@pipeline().parameters.TelemetryDateFolder",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Telemetry Date Folder to Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TelemetryDateFolder",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Config Ingest PageViews",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UsageAnalyticsGetConfig_PageViews",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppInsightsTopic": "PageViews",
								"TelemetryDateFolder": {
									"value": "@variables('TelemetryDateFolder')",
									"type": "Expression"
								},
								"RunBy": {
									"value": "@pipeline().parameters.RunBy",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get Config Ingest PageViewPerformance",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UsageAnalyticsGetConfig_PageViewPerformance",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppInsightsTopic": "PageViewPerformance",
								"TelemetryDateFolder": {
									"value": "@variables('TelemetryDateFolder')",
									"type": "Expression"
								},
								"RunBy": {
									"value": "@pipeline().parameters.RunBy",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get Config Ingest Event",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UsageAnalyticsGetConfig_Event",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppInsightsTopic": "Event",
								"TelemetryDateFolder": {
									"value": "@variables('TelemetryDateFolder')",
									"type": "Expression"
								},
								"RunBy": {
									"value": "@pipeline().parameters.RunBy",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get Config Ingest Metrics",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Default If Telemetry Date Param Blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UsageAnalyticsGetConfig_Metrics",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppInsightsTopic": "Metrics",
								"TelemetryDateFolder": {
									"value": "@variables('TelemetryDateFolder')",
									"type": "Expression"
								},
								"RunBy": {
									"value": "@pipeline().parameters.RunBy",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"TelemetryDateFolder": {
						"type": "string",
						"defaultValue": "PreviousDate"
					},
					"RunBy": {
						"type": "string"
					}
				},
				"variables": {
					"TelemetryDateFolder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Portals"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsGetConfig_PageViews')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsGetConfig_PageViewPerformance')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsGetConfig_Event')]",
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsGetConfig_Metrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyBackup_TRIGGER')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "UsageAnalyticsIngest",
							"type": "PipelineReference"
						},
						"parameters": {
							"TelemetryDateFolder": "[parameters('DailyBackup_TRIGGER_properties_UsageAnalyticsIngest_parameters_TelemetryDateFolder')]",
							"RunBy": "[parameters('DailyBackup_TRIGGER_properties_UsageAnalyticsIngest_parameters_RunBy')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "InsightsLogs_AuditLogs",
							"type": "PipelineReference"
						},
						"parameters": {
							"DateToLoad": "[parameters('DailyBackup_TRIGGER_properties_InsightsLogs_AuditLogs_parameters_DateToLoad')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "InsightsLogs_SignInLogs",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "UsageAnalyticsIngest_Messages",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-06-09T01:00:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UsageAnalyticsIngest')]"
			]
		}
	]
}